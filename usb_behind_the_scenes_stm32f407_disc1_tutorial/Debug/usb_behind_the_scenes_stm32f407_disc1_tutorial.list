
usb_behind_the_scenes_stm32f407_disc1_tutorial.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000012c4  08000190  08000190  00001190  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000000a4  08001454  08001454  00002454  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080014f8  080014f8  00003060  2**0
                  CONTENTS
  4 .ARM          00000008  080014f8  080014f8  000024f8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08001500  08001500  00003060  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08001500  08001500  00002500  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08001504  08001504  00002504  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000060  20000000  08001508  00003000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  00003060  2**0
                  CONTENTS
 10 .bss          0000016c  20000060  20000060  00003060  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  200001cc  200001cc  00003060  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  00003060  2**0
                  CONTENTS, READONLY
 13 .debug_info   00000fda  00000000  00000000  00003090  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 000004b3  00000000  00000000  0000406a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 000000c8  00000000  00000000  00004520  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 00000084  00000000  00000000  000045e8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00019024  00000000  00000000  0000466c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   0000128b  00000000  00000000  0001d690  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    0008c2d9  00000000  00000000  0001e91b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000043  00000000  00000000  000aabf4  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00000ad8  00000000  00000000  000aac38  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 00000081  00000000  00000000  000ab710  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000190 <__do_global_dtors_aux>:
 8000190:	b510      	push	{r4, lr}
 8000192:	4c05      	ldr	r4, [pc, #20]	@ (80001a8 <__do_global_dtors_aux+0x18>)
 8000194:	7823      	ldrb	r3, [r4, #0]
 8000196:	b933      	cbnz	r3, 80001a6 <__do_global_dtors_aux+0x16>
 8000198:	4b04      	ldr	r3, [pc, #16]	@ (80001ac <__do_global_dtors_aux+0x1c>)
 800019a:	b113      	cbz	r3, 80001a2 <__do_global_dtors_aux+0x12>
 800019c:	4804      	ldr	r0, [pc, #16]	@ (80001b0 <__do_global_dtors_aux+0x20>)
 800019e:	f3af 8000 	nop.w
 80001a2:	2301      	movs	r3, #1
 80001a4:	7023      	strb	r3, [r4, #0]
 80001a6:	bd10      	pop	{r4, pc}
 80001a8:	20000060 	.word	0x20000060
 80001ac:	00000000 	.word	0x00000000
 80001b0:	0800143c 	.word	0x0800143c

080001b4 <frame_dummy>:
 80001b4:	b508      	push	{r3, lr}
 80001b6:	4b03      	ldr	r3, [pc, #12]	@ (80001c4 <frame_dummy+0x10>)
 80001b8:	b11b      	cbz	r3, 80001c2 <frame_dummy+0xe>
 80001ba:	4903      	ldr	r1, [pc, #12]	@ (80001c8 <frame_dummy+0x14>)
 80001bc:	4803      	ldr	r0, [pc, #12]	@ (80001cc <frame_dummy+0x18>)
 80001be:	f3af 8000 	nop.w
 80001c2:	bd08      	pop	{r3, pc}
 80001c4:	00000000 	.word	0x00000000
 80001c8:	20000064 	.word	0x20000064
 80001cc:	0800143c 	.word	0x0800143c

080001d0 <memchr>:
 80001d0:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 80001d4:	2a10      	cmp	r2, #16
 80001d6:	db2b      	blt.n	8000230 <memchr+0x60>
 80001d8:	f010 0f07 	tst.w	r0, #7
 80001dc:	d008      	beq.n	80001f0 <memchr+0x20>
 80001de:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001e2:	3a01      	subs	r2, #1
 80001e4:	428b      	cmp	r3, r1
 80001e6:	d02d      	beq.n	8000244 <memchr+0x74>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	b342      	cbz	r2, 8000240 <memchr+0x70>
 80001ee:	d1f6      	bne.n	80001de <memchr+0xe>
 80001f0:	b4f0      	push	{r4, r5, r6, r7}
 80001f2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 80001f6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 80001fa:	f022 0407 	bic.w	r4, r2, #7
 80001fe:	f07f 0700 	mvns.w	r7, #0
 8000202:	2300      	movs	r3, #0
 8000204:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000208:	3c08      	subs	r4, #8
 800020a:	ea85 0501 	eor.w	r5, r5, r1
 800020e:	ea86 0601 	eor.w	r6, r6, r1
 8000212:	fa85 f547 	uadd8	r5, r5, r7
 8000216:	faa3 f587 	sel	r5, r3, r7
 800021a:	fa86 f647 	uadd8	r6, r6, r7
 800021e:	faa5 f687 	sel	r6, r5, r7
 8000222:	b98e      	cbnz	r6, 8000248 <memchr+0x78>
 8000224:	d1ee      	bne.n	8000204 <memchr+0x34>
 8000226:	bcf0      	pop	{r4, r5, r6, r7}
 8000228:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800022c:	f002 0207 	and.w	r2, r2, #7
 8000230:	b132      	cbz	r2, 8000240 <memchr+0x70>
 8000232:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000236:	3a01      	subs	r2, #1
 8000238:	ea83 0301 	eor.w	r3, r3, r1
 800023c:	b113      	cbz	r3, 8000244 <memchr+0x74>
 800023e:	d1f8      	bne.n	8000232 <memchr+0x62>
 8000240:	2000      	movs	r0, #0
 8000242:	4770      	bx	lr
 8000244:	3801      	subs	r0, #1
 8000246:	4770      	bx	lr
 8000248:	2d00      	cmp	r5, #0
 800024a:	bf06      	itte	eq
 800024c:	4635      	moveq	r5, r6
 800024e:	3803      	subeq	r0, #3
 8000250:	3807      	subne	r0, #7
 8000252:	f015 0f01 	tst.w	r5, #1
 8000256:	d107      	bne.n	8000268 <memchr+0x98>
 8000258:	3001      	adds	r0, #1
 800025a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800025e:	bf02      	ittt	eq
 8000260:	3001      	addeq	r0, #1
 8000262:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 8000266:	3001      	addeq	r0, #1
 8000268:	bcf0      	pop	{r4, r5, r6, r7}
 800026a:	3801      	subs	r0, #1
 800026c:	4770      	bx	lr
 800026e:	bf00      	nop

08000270 <ITM_SendChar>:
           \li Is blocking when a debugger is connected, but the previous character sent has not been transmitted.
  \param [in]     ch  Character to transmit.
  \returns            Character to transmit.
 */
__STATIC_INLINE uint32_t ITM_SendChar (uint32_t ch)
{
 8000270:	b480      	push	{r7}
 8000272:	b083      	sub	sp, #12
 8000274:	af00      	add	r7, sp, #0
 8000276:	6078      	str	r0, [r7, #4]
  if (((ITM->TCR & ITM_TCR_ITMENA_Msk) != 0UL) &&      /* ITM enabled */
 8000278:	f04f 4360 	mov.w	r3, #3758096384	@ 0xe0000000
 800027c:	f8d3 3e80 	ldr.w	r3, [r3, #3712]	@ 0xe80
 8000280:	f003 0301 	and.w	r3, r3, #1
 8000284:	2b00      	cmp	r3, #0
 8000286:	d013      	beq.n	80002b0 <ITM_SendChar+0x40>
      ((ITM->TER & 1UL               ) != 0UL)   )     /* ITM Port #0 enabled */
 8000288:	f04f 4360 	mov.w	r3, #3758096384	@ 0xe0000000
 800028c:	f8d3 3e00 	ldr.w	r3, [r3, #3584]	@ 0xe00
 8000290:	f003 0301 	and.w	r3, r3, #1
  if (((ITM->TCR & ITM_TCR_ITMENA_Msk) != 0UL) &&      /* ITM enabled */
 8000294:	2b00      	cmp	r3, #0
 8000296:	d00b      	beq.n	80002b0 <ITM_SendChar+0x40>
  {
    while (ITM->PORT[0U].u32 == 0UL)
 8000298:	e000      	b.n	800029c <ITM_SendChar+0x2c>
    {
      __NOP();
 800029a:	bf00      	nop
    while (ITM->PORT[0U].u32 == 0UL)
 800029c:	f04f 4360 	mov.w	r3, #3758096384	@ 0xe0000000
 80002a0:	681b      	ldr	r3, [r3, #0]
 80002a2:	2b00      	cmp	r3, #0
 80002a4:	d0f9      	beq.n	800029a <ITM_SendChar+0x2a>
    }
    ITM->PORT[0U].u8 = (uint8_t)ch;
 80002a6:	f04f 4360 	mov.w	r3, #3758096384	@ 0xe0000000
 80002aa:	687a      	ldr	r2, [r7, #4]
 80002ac:	b2d2      	uxtb	r2, r2
 80002ae:	701a      	strb	r2, [r3, #0]
  }
  return (ch);
 80002b0:	687b      	ldr	r3, [r7, #4]
}
 80002b2:	4618      	mov	r0, r3
 80002b4:	370c      	adds	r7, #12
 80002b6:	46bd      	mov	sp, r7
 80002b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002bc:	4770      	bx	lr

080002be <_write>:

/** \brief Redirects `printf()` output to the serial wire out (SWO).
 * This function overrides a weak function symbol and is not to be used directly.
 */
int _write(int file, char *ptr, int len)
{
 80002be:	b580      	push	{r7, lr}
 80002c0:	b086      	sub	sp, #24
 80002c2:	af00      	add	r7, sp, #0
 80002c4:	60f8      	str	r0, [r7, #12]
 80002c6:	60b9      	str	r1, [r7, #8]
 80002c8:	607a      	str	r2, [r7, #4]
  int i=0;
 80002ca:	2300      	movs	r3, #0
 80002cc:	617b      	str	r3, [r7, #20]
  for(i=0 ; i<len ; i++)
 80002ce:	2300      	movs	r3, #0
 80002d0:	617b      	str	r3, [r7, #20]
 80002d2:	e009      	b.n	80002e8 <_write+0x2a>
    ITM_SendChar((*ptr++));
 80002d4:	68bb      	ldr	r3, [r7, #8]
 80002d6:	1c5a      	adds	r2, r3, #1
 80002d8:	60ba      	str	r2, [r7, #8]
 80002da:	781b      	ldrb	r3, [r3, #0]
 80002dc:	4618      	mov	r0, r3
 80002de:	f7ff ffc7 	bl	8000270 <ITM_SendChar>
  for(i=0 ; i<len ; i++)
 80002e2:	697b      	ldr	r3, [r7, #20]
 80002e4:	3301      	adds	r3, #1
 80002e6:	617b      	str	r3, [r7, #20]
 80002e8:	697a      	ldr	r2, [r7, #20]
 80002ea:	687b      	ldr	r3, [r7, #4]
 80002ec:	429a      	cmp	r2, r3
 80002ee:	dbf1      	blt.n	80002d4 <_write+0x16>

  return len;
 80002f0:	687b      	ldr	r3, [r7, #4]
}
 80002f2:	4618      	mov	r0, r3
 80002f4:	3718      	adds	r7, #24
 80002f6:	46bd      	mov	sp, r7
 80002f8:	bd80      	pop	{r7, pc}
	...

080002fc <_get_log_level_string>:

char const * const _get_log_level_string(LogLevel const log_level)
{
 80002fc:	b480      	push	{r7}
 80002fe:	b083      	sub	sp, #12
 8000300:	af00      	add	r7, sp, #0
 8000302:	4603      	mov	r3, r0
 8000304:	71fb      	strb	r3, [r7, #7]
    switch(log_level)
 8000306:	79fb      	ldrb	r3, [r7, #7]
 8000308:	2b02      	cmp	r3, #2
 800030a:	d00a      	beq.n	8000322 <_get_log_level_string+0x26>
 800030c:	2b02      	cmp	r3, #2
 800030e:	dc0a      	bgt.n	8000326 <_get_log_level_string+0x2a>
 8000310:	2b00      	cmp	r3, #0
 8000312:	d002      	beq.n	800031a <_get_log_level_string+0x1e>
 8000314:	2b01      	cmp	r3, #1
 8000316:	d002      	beq.n	800031e <_get_log_level_string+0x22>
 8000318:	e005      	b.n	8000326 <_get_log_level_string+0x2a>
    {
        case LOG_LEVEL_ERROR:
            return "ERROR";
 800031a:	4b06      	ldr	r3, [pc, #24]	@ (8000334 <_get_log_level_string+0x38>)
 800031c:	e003      	b.n	8000326 <_get_log_level_string+0x2a>
        case LOG_LEVEL_INFORMATION:
            return "INFO";
 800031e:	4b06      	ldr	r3, [pc, #24]	@ (8000338 <_get_log_level_string+0x3c>)
 8000320:	e001      	b.n	8000326 <_get_log_level_string+0x2a>
        case LOG_LEVEL_DEBUG:
            return "DEBUG";
 8000322:	4b06      	ldr	r3, [pc, #24]	@ (800033c <_get_log_level_string+0x40>)
 8000324:	e7ff      	b.n	8000326 <_get_log_level_string+0x2a>
    }
}
 8000326:	4618      	mov	r0, r3
 8000328:	370c      	adds	r7, #12
 800032a:	46bd      	mov	sp, r7
 800032c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000330:	4770      	bx	lr
 8000332:	bf00      	nop
 8000334:	08001454 	.word	0x08001454
 8000338:	0800145c 	.word	0x0800145c
 800033c:	08001464 	.word	0x08001464

08000340 <_log>:

static void _log(LogLevel const log_level, char const * const format, va_list args)
{
 8000340:	b580      	push	{r7, lr}
 8000342:	b084      	sub	sp, #16
 8000344:	af00      	add	r7, sp, #0
 8000346:	4603      	mov	r3, r0
 8000348:	60b9      	str	r1, [r7, #8]
 800034a:	607a      	str	r2, [r7, #4]
 800034c:	73fb      	strb	r3, [r7, #15]
    if (log_level > system_log_level)
 800034e:	4b0f      	ldr	r3, [pc, #60]	@ (800038c <_log+0x4c>)
 8000350:	781b      	ldrb	r3, [r3, #0]
 8000352:	7bfa      	ldrb	r2, [r7, #15]
 8000354:	429a      	cmp	r2, r3
 8000356:	d814      	bhi.n	8000382 <_log+0x42>
        return;

	printf("[%s] ", _get_log_level_string(log_level));
 8000358:	7bfb      	ldrb	r3, [r7, #15]
 800035a:	4618      	mov	r0, r3
 800035c:	f7ff ffce 	bl	80002fc <_get_log_level_string>
 8000360:	4603      	mov	r3, r0
 8000362:	4619      	mov	r1, r3
 8000364:	480a      	ldr	r0, [pc, #40]	@ (8000390 <_log+0x50>)
 8000366:	f000 fc5f 	bl	8000c28 <iprintf>
	vfprintf(stdout, format, args);
 800036a:	4b0a      	ldr	r3, [pc, #40]	@ (8000394 <_log+0x54>)
 800036c:	681b      	ldr	r3, [r3, #0]
 800036e:	689b      	ldr	r3, [r3, #8]
 8000370:	687a      	ldr	r2, [r7, #4]
 8000372:	68b9      	ldr	r1, [r7, #8]
 8000374:	4618      	mov	r0, r3
 8000376:	f000 f9fd 	bl	8000774 <vfiprintf>
	printf("\n");
 800037a:	200a      	movs	r0, #10
 800037c:	f000 fc66 	bl	8000c4c <putchar>
 8000380:	e000      	b.n	8000384 <_log+0x44>
        return;
 8000382:	bf00      	nop
}
 8000384:	3710      	adds	r7, #16
 8000386:	46bd      	mov	sp, r7
 8000388:	bd80      	pop	{r7, pc}
 800038a:	bf00      	nop
 800038c:	20000000 	.word	0x20000000
 8000390:	0800146c 	.word	0x0800146c
 8000394:	20000010 	.word	0x20000010

08000398 <log_info>:
    _log(LOG_LEVEL_ERROR, format, args);
    va_end(args);
}

void log_info(char const * const format, ...)
{
 8000398:	b40f      	push	{r0, r1, r2, r3}
 800039a:	b580      	push	{r7, lr}
 800039c:	b082      	sub	sp, #8
 800039e:	af00      	add	r7, sp, #0
    va_list args;
	va_start(args, format);
 80003a0:	f107 0314 	add.w	r3, r7, #20
 80003a4:	607b      	str	r3, [r7, #4]
    _log(LOG_LEVEL_INFORMATION, format, args);
 80003a6:	687a      	ldr	r2, [r7, #4]
 80003a8:	6939      	ldr	r1, [r7, #16]
 80003aa:	2001      	movs	r0, #1
 80003ac:	f7ff ffc8 	bl	8000340 <_log>
    va_end(args);
}
 80003b0:	bf00      	nop
 80003b2:	3708      	adds	r7, #8
 80003b4:	46bd      	mov	sp, r7
 80003b6:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 80003ba:	b004      	add	sp, #16
 80003bc:	4770      	bx	lr
	...

080003c0 <configure_clock>:
// clock pre-scalar values obtained from STMCUBEIDE
// M-8, N-336, P-2, Q-7
// MCO1 - pre-scalar = 4
// AHB-1, APB1-4, APB2-2
static void configure_clock(void)
{
 80003c0:	b480      	push	{r7}
 80003c2:	af00      	add	r7, sp, #0

	MODIFY_REG(FLASH->ACR,
 80003c4:	4b28      	ldr	r3, [pc, #160]	@ (8000468 <configure_clock+0xa8>)
 80003c6:	681b      	ldr	r3, [r3, #0]
 80003c8:	f023 0307 	bic.w	r3, r3, #7
 80003cc:	4a26      	ldr	r2, [pc, #152]	@ (8000468 <configure_clock+0xa8>)
 80003ce:	f043 0305 	orr.w	r3, r3, #5
 80003d2:	6013      	str	r3, [r2, #0]
			FLASH_ACR_LATENCY,
			_VAL2FLD(FLASH_ACR_LATENCY, FLASH_ACR_LATENCY_5WS) //(FLASH_ACR_LATENCY_5WS << FLASH_ACR_LATENCY_Pos)
			);

	//ENABLE HSERCC_PLLCFGR_PLLM
	SET_BIT(RCC->CR, RCC_CR_HSEON);
 80003d4:	4b25      	ldr	r3, [pc, #148]	@ (800046c <configure_clock+0xac>)
 80003d6:	681b      	ldr	r3, [r3, #0]
 80003d8:	4a24      	ldr	r2, [pc, #144]	@ (800046c <configure_clock+0xac>)
 80003da:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 80003de:	6013      	str	r3, [r2, #0]

	// wait until HSE is stable
	while(!READ_BIT(RCC->CR, RCC_CR_HSERDY));
 80003e0:	bf00      	nop
 80003e2:	4b22      	ldr	r3, [pc, #136]	@ (800046c <configure_clock+0xac>)
 80003e4:	681b      	ldr	r3, [r3, #0]
 80003e6:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80003ea:	2b00      	cmp	r3, #0
 80003ec:	d0f9      	beq.n	80003e2 <configure_clock+0x22>

	MODIFY_REG(RCC->PLLCFGR,
 80003ee:	4b1f      	ldr	r3, [pc, #124]	@ (800046c <configure_clock+0xac>)
 80003f0:	685b      	ldr	r3, [r3, #4]
 80003f2:	4a1f      	ldr	r2, [pc, #124]	@ (8000470 <configure_clock+0xb0>)
 80003f4:	401a      	ands	r2, r3
 80003f6:	491d      	ldr	r1, [pc, #116]	@ (800046c <configure_clock+0xac>)
 80003f8:	4b1e      	ldr	r3, [pc, #120]	@ (8000474 <configure_clock+0xb4>)
 80003fa:	4313      	orrs	r3, r2
 80003fc:	604b      	str	r3, [r1, #4]
			RCC_PLLCFGR_PLLM | RCC_PLLCFGR_PLLN | RCC_PLLCFGR_PLLQ | RCC_PLLCFGR_PLLSRC | RCC_PLLCFGR_PLLP,
			_VAL2FLD(RCC_PLLCFGR_PLLM, 8) | _VAL2FLD(RCC_PLLCFGR_PLLN, 336) | _VAL2FLD(RCC_PLLCFGR_PLLQ, 7) | _VAL2FLD(RCC_PLLCFGR_PLLSRC, 1)
			);

	//ENABLE PLL module
	SET_BIT(RCC->CR, RCC_CR_PLLON);
 80003fe:	4b1b      	ldr	r3, [pc, #108]	@ (800046c <configure_clock+0xac>)
 8000400:	681b      	ldr	r3, [r3, #0]
 8000402:	4a1a      	ldr	r2, [pc, #104]	@ (800046c <configure_clock+0xac>)
 8000404:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 8000408:	6013      	str	r3, [r2, #0]

	// wait until PLL is stable
	while(!READ_BIT(RCC->CR, RCC_CR_PLLRDY));
 800040a:	bf00      	nop
 800040c:	4b17      	ldr	r3, [pc, #92]	@ (800046c <configure_clock+0xac>)
 800040e:	681b      	ldr	r3, [r3, #0]
 8000410:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8000414:	2b00      	cmp	r3, #0
 8000416:	d0f9      	beq.n	800040c <configure_clock+0x4c>

	//switches system clock to PLL
	MODIFY_REG(RCC->CFGR,
 8000418:	4b14      	ldr	r3, [pc, #80]	@ (800046c <configure_clock+0xac>)
 800041a:	689b      	ldr	r3, [r3, #8]
 800041c:	f023 0303 	bic.w	r3, r3, #3
 8000420:	4a12      	ldr	r2, [pc, #72]	@ (800046c <configure_clock+0xac>)
 8000422:	f043 0302 	orr.w	r3, r3, #2
 8000426:	6093      	str	r3, [r2, #8]
			RCC_CFGR_SW,
			_VAL2FLD(RCC_CFGR_SW, RCC_CFGR_SW_PLL)
			);

	//Configures PPRE1 i.e APB1 pre-scalar
	MODIFY_REG(RCC->CFGR,
 8000428:	4b10      	ldr	r3, [pc, #64]	@ (800046c <configure_clock+0xac>)
 800042a:	689b      	ldr	r3, [r3, #8]
 800042c:	4a0f      	ldr	r2, [pc, #60]	@ (800046c <configure_clock+0xac>)
 800042e:	f423 53e0 	bic.w	r3, r3, #7168	@ 0x1c00
 8000432:	6093      	str	r3, [r2, #8]
			RCC_CFGR_PPRE1,
			_VAL2FLD(RCC_CFGR_PPRE1, 16) // pre-scalar value of 4
			);

	//Configures PPRE2 i.e APB2 pre-scalar
	MODIFY_REG(RCC->CFGR,
 8000434:	4b0d      	ldr	r3, [pc, #52]	@ (800046c <configure_clock+0xac>)
 8000436:	689b      	ldr	r3, [r3, #8]
 8000438:	f423 4360 	bic.w	r3, r3, #57344	@ 0xe000
 800043c:	4a0b      	ldr	r2, [pc, #44]	@ (800046c <configure_clock+0xac>)
 800043e:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8000442:	6093      	str	r3, [r2, #8]
			RCC_CFGR_PPRE2,
			_VAL2FLD(RCC_CFGR_PPRE2, 4) // pre-scalar value of 2
			);

	// wait until PLL is used
	while(READ_BIT(RCC->CFGR, RCC_CFGR_SWS) != RCC_CFGR_SWS_PLL);
 8000444:	bf00      	nop
 8000446:	4b09      	ldr	r3, [pc, #36]	@ (800046c <configure_clock+0xac>)
 8000448:	689b      	ldr	r3, [r3, #8]
 800044a:	f003 030c 	and.w	r3, r3, #12
 800044e:	2b08      	cmp	r3, #8
 8000450:	d1f9      	bne.n	8000446 <configure_clock+0x86>

	//Disable HSI
	CLEAR_BIT(RCC->CR, RCC_CR_HSION);
 8000452:	4b06      	ldr	r3, [pc, #24]	@ (800046c <configure_clock+0xac>)
 8000454:	681b      	ldr	r3, [r3, #0]
 8000456:	4a05      	ldr	r2, [pc, #20]	@ (800046c <configure_clock+0xac>)
 8000458:	f023 0301 	bic.w	r3, r3, #1
 800045c:	6013      	str	r3, [r2, #0]
}
 800045e:	bf00      	nop
 8000460:	46bd      	mov	sp, r7
 8000462:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000466:	4770      	bx	lr
 8000468:	40023c00 	.word	0x40023c00
 800046c:	40023800 	.word	0x40023800
 8000470:	f0bc8000 	.word	0xf0bc8000
 8000474:	07405408 	.word	0x07405408

08000478 <SystemInit>:

void SystemInit(void)
{
 8000478:	b580      	push	{r7, lr}
 800047a:	af00      	add	r7, sp, #0
	configure_clock();
 800047c:	f7ff ffa0 	bl	80003c0 <configure_clock>
}
 8000480:	bf00      	nop
 8000482:	bd80      	pop	{r7, pc}

08000484 <main>:
#include "stm32f4xx.h"
#include "Helpers/logger.h"

int main(void)
{
 8000484:	b580      	push	{r7, lr}
 8000486:	af00      	add	r7, sp, #0
	log_info("Program Entry point\r\n");
 8000488:	4803      	ldr	r0, [pc, #12]	@ (8000498 <main+0x14>)
 800048a:	f7ff ff85 	bl	8000398 <log_info>
	log_info("Program Entry point2\r\n");
 800048e:	4803      	ldr	r0, [pc, #12]	@ (800049c <main+0x18>)
 8000490:	f7ff ff82 	bl	8000398 <log_info>
    /* Loop forever */
	for(;;);
 8000494:	bf00      	nop
 8000496:	e7fd      	b.n	8000494 <main+0x10>
 8000498:	08001494 	.word	0x08001494
 800049c:	080014ac 	.word	0x080014ac

080004a0 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80004a0:	480d      	ldr	r0, [pc, #52]	@ (80004d8 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80004a2:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80004a4:	f7ff ffe8 	bl	8000478 <SystemInit>

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80004a8:	480c      	ldr	r0, [pc, #48]	@ (80004dc <LoopForever+0x6>)
  ldr r1, =_edata
 80004aa:	490d      	ldr	r1, [pc, #52]	@ (80004e0 <LoopForever+0xa>)
  ldr r2, =_sidata
 80004ac:	4a0d      	ldr	r2, [pc, #52]	@ (80004e4 <LoopForever+0xe>)
  movs r3, #0
 80004ae:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80004b0:	e002      	b.n	80004b8 <LoopCopyDataInit>

080004b2 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80004b2:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80004b4:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80004b6:	3304      	adds	r3, #4

080004b8 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80004b8:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80004ba:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80004bc:	d3f9      	bcc.n	80004b2 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80004be:	4a0a      	ldr	r2, [pc, #40]	@ (80004e8 <LoopForever+0x12>)
  ldr r4, =_ebss
 80004c0:	4c0a      	ldr	r4, [pc, #40]	@ (80004ec <LoopForever+0x16>)
  movs r3, #0
 80004c2:	2300      	movs	r3, #0
  b LoopFillZerobss
 80004c4:	e001      	b.n	80004ca <LoopFillZerobss>

080004c6 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80004c6:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80004c8:	3204      	adds	r2, #4

080004ca <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80004ca:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80004cc:	d3fb      	bcc.n	80004c6 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80004ce:	f000 fceb 	bl	8000ea8 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80004d2:	f7ff ffd7 	bl	8000484 <main>

080004d6 <LoopForever>:

LoopForever:
  b LoopForever
 80004d6:	e7fe      	b.n	80004d6 <LoopForever>
  ldr   r0, =_estack
 80004d8:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80004dc:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80004e0:	20000060 	.word	0x20000060
  ldr r2, =_sidata
 80004e4:	08001508 	.word	0x08001508
  ldr r2, =_sbss
 80004e8:	20000060 	.word	0x20000060
  ldr r4, =_ebss
 80004ec:	200001cc 	.word	0x200001cc

080004f0 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80004f0:	e7fe      	b.n	80004f0 <ADC_IRQHandler>

080004f2 <__sfputc_r>:
 80004f2:	6893      	ldr	r3, [r2, #8]
 80004f4:	3b01      	subs	r3, #1
 80004f6:	2b00      	cmp	r3, #0
 80004f8:	b410      	push	{r4}
 80004fa:	6093      	str	r3, [r2, #8]
 80004fc:	da08      	bge.n	8000510 <__sfputc_r+0x1e>
 80004fe:	6994      	ldr	r4, [r2, #24]
 8000500:	42a3      	cmp	r3, r4
 8000502:	db01      	blt.n	8000508 <__sfputc_r+0x16>
 8000504:	290a      	cmp	r1, #10
 8000506:	d103      	bne.n	8000510 <__sfputc_r+0x1e>
 8000508:	f85d 4b04 	ldr.w	r4, [sp], #4
 800050c:	f000 bbe9 	b.w	8000ce2 <__swbuf_r>
 8000510:	6813      	ldr	r3, [r2, #0]
 8000512:	1c58      	adds	r0, r3, #1
 8000514:	6010      	str	r0, [r2, #0]
 8000516:	7019      	strb	r1, [r3, #0]
 8000518:	4608      	mov	r0, r1
 800051a:	f85d 4b04 	ldr.w	r4, [sp], #4
 800051e:	4770      	bx	lr

08000520 <__sfputs_r>:
 8000520:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000522:	4606      	mov	r6, r0
 8000524:	460f      	mov	r7, r1
 8000526:	4614      	mov	r4, r2
 8000528:	18d5      	adds	r5, r2, r3
 800052a:	42ac      	cmp	r4, r5
 800052c:	d101      	bne.n	8000532 <__sfputs_r+0x12>
 800052e:	2000      	movs	r0, #0
 8000530:	e007      	b.n	8000542 <__sfputs_r+0x22>
 8000532:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000536:	463a      	mov	r2, r7
 8000538:	4630      	mov	r0, r6
 800053a:	f7ff ffda 	bl	80004f2 <__sfputc_r>
 800053e:	1c43      	adds	r3, r0, #1
 8000540:	d1f3      	bne.n	800052a <__sfputs_r+0xa>
 8000542:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08000544 <_vfiprintf_r>:
 8000544:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000548:	460d      	mov	r5, r1
 800054a:	b09d      	sub	sp, #116	@ 0x74
 800054c:	4614      	mov	r4, r2
 800054e:	4698      	mov	r8, r3
 8000550:	4606      	mov	r6, r0
 8000552:	b118      	cbz	r0, 800055c <_vfiprintf_r+0x18>
 8000554:	6a03      	ldr	r3, [r0, #32]
 8000556:	b90b      	cbnz	r3, 800055c <_vfiprintf_r+0x18>
 8000558:	f000 fb30 	bl	8000bbc <__sinit>
 800055c:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 800055e:	07d9      	lsls	r1, r3, #31
 8000560:	d405      	bmi.n	800056e <_vfiprintf_r+0x2a>
 8000562:	89ab      	ldrh	r3, [r5, #12]
 8000564:	059a      	lsls	r2, r3, #22
 8000566:	d402      	bmi.n	800056e <_vfiprintf_r+0x2a>
 8000568:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 800056a:	f000 fcc2 	bl	8000ef2 <__retarget_lock_acquire_recursive>
 800056e:	89ab      	ldrh	r3, [r5, #12]
 8000570:	071b      	lsls	r3, r3, #28
 8000572:	d501      	bpl.n	8000578 <_vfiprintf_r+0x34>
 8000574:	692b      	ldr	r3, [r5, #16]
 8000576:	b99b      	cbnz	r3, 80005a0 <_vfiprintf_r+0x5c>
 8000578:	4629      	mov	r1, r5
 800057a:	4630      	mov	r0, r6
 800057c:	f000 fbf0 	bl	8000d60 <__swsetup_r>
 8000580:	b170      	cbz	r0, 80005a0 <_vfiprintf_r+0x5c>
 8000582:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8000584:	07dc      	lsls	r4, r3, #31
 8000586:	d504      	bpl.n	8000592 <_vfiprintf_r+0x4e>
 8000588:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 800058c:	b01d      	add	sp, #116	@ 0x74
 800058e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000592:	89ab      	ldrh	r3, [r5, #12]
 8000594:	0598      	lsls	r0, r3, #22
 8000596:	d4f7      	bmi.n	8000588 <_vfiprintf_r+0x44>
 8000598:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 800059a:	f000 fcab 	bl	8000ef4 <__retarget_lock_release_recursive>
 800059e:	e7f3      	b.n	8000588 <_vfiprintf_r+0x44>
 80005a0:	2300      	movs	r3, #0
 80005a2:	9309      	str	r3, [sp, #36]	@ 0x24
 80005a4:	2320      	movs	r3, #32
 80005a6:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 80005aa:	f8cd 800c 	str.w	r8, [sp, #12]
 80005ae:	2330      	movs	r3, #48	@ 0x30
 80005b0:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 8000760 <_vfiprintf_r+0x21c>
 80005b4:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 80005b8:	f04f 0901 	mov.w	r9, #1
 80005bc:	4623      	mov	r3, r4
 80005be:	469a      	mov	sl, r3
 80005c0:	f813 2b01 	ldrb.w	r2, [r3], #1
 80005c4:	b10a      	cbz	r2, 80005ca <_vfiprintf_r+0x86>
 80005c6:	2a25      	cmp	r2, #37	@ 0x25
 80005c8:	d1f9      	bne.n	80005be <_vfiprintf_r+0x7a>
 80005ca:	ebba 0b04 	subs.w	fp, sl, r4
 80005ce:	d00b      	beq.n	80005e8 <_vfiprintf_r+0xa4>
 80005d0:	465b      	mov	r3, fp
 80005d2:	4622      	mov	r2, r4
 80005d4:	4629      	mov	r1, r5
 80005d6:	4630      	mov	r0, r6
 80005d8:	f7ff ffa2 	bl	8000520 <__sfputs_r>
 80005dc:	3001      	adds	r0, #1
 80005de:	f000 80a7 	beq.w	8000730 <_vfiprintf_r+0x1ec>
 80005e2:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80005e4:	445a      	add	r2, fp
 80005e6:	9209      	str	r2, [sp, #36]	@ 0x24
 80005e8:	f89a 3000 	ldrb.w	r3, [sl]
 80005ec:	2b00      	cmp	r3, #0
 80005ee:	f000 809f 	beq.w	8000730 <_vfiprintf_r+0x1ec>
 80005f2:	2300      	movs	r3, #0
 80005f4:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 80005f8:	e9cd 2305 	strd	r2, r3, [sp, #20]
 80005fc:	f10a 0a01 	add.w	sl, sl, #1
 8000600:	9304      	str	r3, [sp, #16]
 8000602:	9307      	str	r3, [sp, #28]
 8000604:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8000608:	931a      	str	r3, [sp, #104]	@ 0x68
 800060a:	4654      	mov	r4, sl
 800060c:	2205      	movs	r2, #5
 800060e:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000612:	4853      	ldr	r0, [pc, #332]	@ (8000760 <_vfiprintf_r+0x21c>)
 8000614:	f7ff fddc 	bl	80001d0 <memchr>
 8000618:	9a04      	ldr	r2, [sp, #16]
 800061a:	b9d8      	cbnz	r0, 8000654 <_vfiprintf_r+0x110>
 800061c:	06d1      	lsls	r1, r2, #27
 800061e:	bf44      	itt	mi
 8000620:	2320      	movmi	r3, #32
 8000622:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8000626:	0713      	lsls	r3, r2, #28
 8000628:	bf44      	itt	mi
 800062a:	232b      	movmi	r3, #43	@ 0x2b
 800062c:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8000630:	f89a 3000 	ldrb.w	r3, [sl]
 8000634:	2b2a      	cmp	r3, #42	@ 0x2a
 8000636:	d015      	beq.n	8000664 <_vfiprintf_r+0x120>
 8000638:	9a07      	ldr	r2, [sp, #28]
 800063a:	4654      	mov	r4, sl
 800063c:	2000      	movs	r0, #0
 800063e:	f04f 0c0a 	mov.w	ip, #10
 8000642:	4621      	mov	r1, r4
 8000644:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000648:	3b30      	subs	r3, #48	@ 0x30
 800064a:	2b09      	cmp	r3, #9
 800064c:	d94b      	bls.n	80006e6 <_vfiprintf_r+0x1a2>
 800064e:	b1b0      	cbz	r0, 800067e <_vfiprintf_r+0x13a>
 8000650:	9207      	str	r2, [sp, #28]
 8000652:	e014      	b.n	800067e <_vfiprintf_r+0x13a>
 8000654:	eba0 0308 	sub.w	r3, r0, r8
 8000658:	fa09 f303 	lsl.w	r3, r9, r3
 800065c:	4313      	orrs	r3, r2
 800065e:	9304      	str	r3, [sp, #16]
 8000660:	46a2      	mov	sl, r4
 8000662:	e7d2      	b.n	800060a <_vfiprintf_r+0xc6>
 8000664:	9b03      	ldr	r3, [sp, #12]
 8000666:	1d19      	adds	r1, r3, #4
 8000668:	681b      	ldr	r3, [r3, #0]
 800066a:	9103      	str	r1, [sp, #12]
 800066c:	2b00      	cmp	r3, #0
 800066e:	bfbb      	ittet	lt
 8000670:	425b      	neglt	r3, r3
 8000672:	f042 0202 	orrlt.w	r2, r2, #2
 8000676:	9307      	strge	r3, [sp, #28]
 8000678:	9307      	strlt	r3, [sp, #28]
 800067a:	bfb8      	it	lt
 800067c:	9204      	strlt	r2, [sp, #16]
 800067e:	7823      	ldrb	r3, [r4, #0]
 8000680:	2b2e      	cmp	r3, #46	@ 0x2e
 8000682:	d10a      	bne.n	800069a <_vfiprintf_r+0x156>
 8000684:	7863      	ldrb	r3, [r4, #1]
 8000686:	2b2a      	cmp	r3, #42	@ 0x2a
 8000688:	d132      	bne.n	80006f0 <_vfiprintf_r+0x1ac>
 800068a:	9b03      	ldr	r3, [sp, #12]
 800068c:	1d1a      	adds	r2, r3, #4
 800068e:	681b      	ldr	r3, [r3, #0]
 8000690:	9203      	str	r2, [sp, #12]
 8000692:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8000696:	3402      	adds	r4, #2
 8000698:	9305      	str	r3, [sp, #20]
 800069a:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 8000770 <_vfiprintf_r+0x22c>
 800069e:	7821      	ldrb	r1, [r4, #0]
 80006a0:	2203      	movs	r2, #3
 80006a2:	4650      	mov	r0, sl
 80006a4:	f7ff fd94 	bl	80001d0 <memchr>
 80006a8:	b138      	cbz	r0, 80006ba <_vfiprintf_r+0x176>
 80006aa:	9b04      	ldr	r3, [sp, #16]
 80006ac:	eba0 000a 	sub.w	r0, r0, sl
 80006b0:	2240      	movs	r2, #64	@ 0x40
 80006b2:	4082      	lsls	r2, r0
 80006b4:	4313      	orrs	r3, r2
 80006b6:	3401      	adds	r4, #1
 80006b8:	9304      	str	r3, [sp, #16]
 80006ba:	f814 1b01 	ldrb.w	r1, [r4], #1
 80006be:	4829      	ldr	r0, [pc, #164]	@ (8000764 <_vfiprintf_r+0x220>)
 80006c0:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 80006c4:	2206      	movs	r2, #6
 80006c6:	f7ff fd83 	bl	80001d0 <memchr>
 80006ca:	2800      	cmp	r0, #0
 80006cc:	d03f      	beq.n	800074e <_vfiprintf_r+0x20a>
 80006ce:	4b26      	ldr	r3, [pc, #152]	@ (8000768 <_vfiprintf_r+0x224>)
 80006d0:	bb1b      	cbnz	r3, 800071a <_vfiprintf_r+0x1d6>
 80006d2:	9b03      	ldr	r3, [sp, #12]
 80006d4:	3307      	adds	r3, #7
 80006d6:	f023 0307 	bic.w	r3, r3, #7
 80006da:	3308      	adds	r3, #8
 80006dc:	9303      	str	r3, [sp, #12]
 80006de:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80006e0:	443b      	add	r3, r7
 80006e2:	9309      	str	r3, [sp, #36]	@ 0x24
 80006e4:	e76a      	b.n	80005bc <_vfiprintf_r+0x78>
 80006e6:	fb0c 3202 	mla	r2, ip, r2, r3
 80006ea:	460c      	mov	r4, r1
 80006ec:	2001      	movs	r0, #1
 80006ee:	e7a8      	b.n	8000642 <_vfiprintf_r+0xfe>
 80006f0:	2300      	movs	r3, #0
 80006f2:	3401      	adds	r4, #1
 80006f4:	9305      	str	r3, [sp, #20]
 80006f6:	4619      	mov	r1, r3
 80006f8:	f04f 0c0a 	mov.w	ip, #10
 80006fc:	4620      	mov	r0, r4
 80006fe:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000702:	3a30      	subs	r2, #48	@ 0x30
 8000704:	2a09      	cmp	r2, #9
 8000706:	d903      	bls.n	8000710 <_vfiprintf_r+0x1cc>
 8000708:	2b00      	cmp	r3, #0
 800070a:	d0c6      	beq.n	800069a <_vfiprintf_r+0x156>
 800070c:	9105      	str	r1, [sp, #20]
 800070e:	e7c4      	b.n	800069a <_vfiprintf_r+0x156>
 8000710:	fb0c 2101 	mla	r1, ip, r1, r2
 8000714:	4604      	mov	r4, r0
 8000716:	2301      	movs	r3, #1
 8000718:	e7f0      	b.n	80006fc <_vfiprintf_r+0x1b8>
 800071a:	ab03      	add	r3, sp, #12
 800071c:	9300      	str	r3, [sp, #0]
 800071e:	462a      	mov	r2, r5
 8000720:	4b12      	ldr	r3, [pc, #72]	@ (800076c <_vfiprintf_r+0x228>)
 8000722:	a904      	add	r1, sp, #16
 8000724:	4630      	mov	r0, r6
 8000726:	f3af 8000 	nop.w
 800072a:	4607      	mov	r7, r0
 800072c:	1c78      	adds	r0, r7, #1
 800072e:	d1d6      	bne.n	80006de <_vfiprintf_r+0x19a>
 8000730:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8000732:	07d9      	lsls	r1, r3, #31
 8000734:	d405      	bmi.n	8000742 <_vfiprintf_r+0x1fe>
 8000736:	89ab      	ldrh	r3, [r5, #12]
 8000738:	059a      	lsls	r2, r3, #22
 800073a:	d402      	bmi.n	8000742 <_vfiprintf_r+0x1fe>
 800073c:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 800073e:	f000 fbd9 	bl	8000ef4 <__retarget_lock_release_recursive>
 8000742:	89ab      	ldrh	r3, [r5, #12]
 8000744:	065b      	lsls	r3, r3, #25
 8000746:	f53f af1f 	bmi.w	8000588 <_vfiprintf_r+0x44>
 800074a:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800074c:	e71e      	b.n	800058c <_vfiprintf_r+0x48>
 800074e:	ab03      	add	r3, sp, #12
 8000750:	9300      	str	r3, [sp, #0]
 8000752:	462a      	mov	r2, r5
 8000754:	4b05      	ldr	r3, [pc, #20]	@ (800076c <_vfiprintf_r+0x228>)
 8000756:	a904      	add	r1, sp, #16
 8000758:	4630      	mov	r0, r6
 800075a:	f000 f883 	bl	8000864 <_printf_i>
 800075e:	e7e4      	b.n	800072a <_vfiprintf_r+0x1e6>
 8000760:	080014c3 	.word	0x080014c3
 8000764:	080014cd 	.word	0x080014cd
 8000768:	00000000 	.word	0x00000000
 800076c:	08000521 	.word	0x08000521
 8000770:	080014c9 	.word	0x080014c9

08000774 <vfiprintf>:
 8000774:	4613      	mov	r3, r2
 8000776:	460a      	mov	r2, r1
 8000778:	4601      	mov	r1, r0
 800077a:	4802      	ldr	r0, [pc, #8]	@ (8000784 <vfiprintf+0x10>)
 800077c:	6800      	ldr	r0, [r0, #0]
 800077e:	f7ff bee1 	b.w	8000544 <_vfiprintf_r>
 8000782:	bf00      	nop
 8000784:	20000010 	.word	0x20000010

08000788 <_printf_common>:
 8000788:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800078c:	4616      	mov	r6, r2
 800078e:	4698      	mov	r8, r3
 8000790:	688a      	ldr	r2, [r1, #8]
 8000792:	690b      	ldr	r3, [r1, #16]
 8000794:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8000798:	4293      	cmp	r3, r2
 800079a:	bfb8      	it	lt
 800079c:	4613      	movlt	r3, r2
 800079e:	6033      	str	r3, [r6, #0]
 80007a0:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 80007a4:	4607      	mov	r7, r0
 80007a6:	460c      	mov	r4, r1
 80007a8:	b10a      	cbz	r2, 80007ae <_printf_common+0x26>
 80007aa:	3301      	adds	r3, #1
 80007ac:	6033      	str	r3, [r6, #0]
 80007ae:	6823      	ldr	r3, [r4, #0]
 80007b0:	0699      	lsls	r1, r3, #26
 80007b2:	bf42      	ittt	mi
 80007b4:	6833      	ldrmi	r3, [r6, #0]
 80007b6:	3302      	addmi	r3, #2
 80007b8:	6033      	strmi	r3, [r6, #0]
 80007ba:	6825      	ldr	r5, [r4, #0]
 80007bc:	f015 0506 	ands.w	r5, r5, #6
 80007c0:	d106      	bne.n	80007d0 <_printf_common+0x48>
 80007c2:	f104 0a19 	add.w	sl, r4, #25
 80007c6:	68e3      	ldr	r3, [r4, #12]
 80007c8:	6832      	ldr	r2, [r6, #0]
 80007ca:	1a9b      	subs	r3, r3, r2
 80007cc:	42ab      	cmp	r3, r5
 80007ce:	dc26      	bgt.n	800081e <_printf_common+0x96>
 80007d0:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 80007d4:	6822      	ldr	r2, [r4, #0]
 80007d6:	3b00      	subs	r3, #0
 80007d8:	bf18      	it	ne
 80007da:	2301      	movne	r3, #1
 80007dc:	0692      	lsls	r2, r2, #26
 80007de:	d42b      	bmi.n	8000838 <_printf_common+0xb0>
 80007e0:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 80007e4:	4641      	mov	r1, r8
 80007e6:	4638      	mov	r0, r7
 80007e8:	47c8      	blx	r9
 80007ea:	3001      	adds	r0, #1
 80007ec:	d01e      	beq.n	800082c <_printf_common+0xa4>
 80007ee:	6823      	ldr	r3, [r4, #0]
 80007f0:	6922      	ldr	r2, [r4, #16]
 80007f2:	f003 0306 	and.w	r3, r3, #6
 80007f6:	2b04      	cmp	r3, #4
 80007f8:	bf02      	ittt	eq
 80007fa:	68e5      	ldreq	r5, [r4, #12]
 80007fc:	6833      	ldreq	r3, [r6, #0]
 80007fe:	1aed      	subeq	r5, r5, r3
 8000800:	68a3      	ldr	r3, [r4, #8]
 8000802:	bf0c      	ite	eq
 8000804:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8000808:	2500      	movne	r5, #0
 800080a:	4293      	cmp	r3, r2
 800080c:	bfc4      	itt	gt
 800080e:	1a9b      	subgt	r3, r3, r2
 8000810:	18ed      	addgt	r5, r5, r3
 8000812:	2600      	movs	r6, #0
 8000814:	341a      	adds	r4, #26
 8000816:	42b5      	cmp	r5, r6
 8000818:	d11a      	bne.n	8000850 <_printf_common+0xc8>
 800081a:	2000      	movs	r0, #0
 800081c:	e008      	b.n	8000830 <_printf_common+0xa8>
 800081e:	2301      	movs	r3, #1
 8000820:	4652      	mov	r2, sl
 8000822:	4641      	mov	r1, r8
 8000824:	4638      	mov	r0, r7
 8000826:	47c8      	blx	r9
 8000828:	3001      	adds	r0, #1
 800082a:	d103      	bne.n	8000834 <_printf_common+0xac>
 800082c:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8000830:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000834:	3501      	adds	r5, #1
 8000836:	e7c6      	b.n	80007c6 <_printf_common+0x3e>
 8000838:	18e1      	adds	r1, r4, r3
 800083a:	1c5a      	adds	r2, r3, #1
 800083c:	2030      	movs	r0, #48	@ 0x30
 800083e:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 8000842:	4422      	add	r2, r4
 8000844:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 8000848:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 800084c:	3302      	adds	r3, #2
 800084e:	e7c7      	b.n	80007e0 <_printf_common+0x58>
 8000850:	2301      	movs	r3, #1
 8000852:	4622      	mov	r2, r4
 8000854:	4641      	mov	r1, r8
 8000856:	4638      	mov	r0, r7
 8000858:	47c8      	blx	r9
 800085a:	3001      	adds	r0, #1
 800085c:	d0e6      	beq.n	800082c <_printf_common+0xa4>
 800085e:	3601      	adds	r6, #1
 8000860:	e7d9      	b.n	8000816 <_printf_common+0x8e>
	...

08000864 <_printf_i>:
 8000864:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8000868:	7e0f      	ldrb	r7, [r1, #24]
 800086a:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 800086c:	2f78      	cmp	r7, #120	@ 0x78
 800086e:	4691      	mov	r9, r2
 8000870:	4680      	mov	r8, r0
 8000872:	460c      	mov	r4, r1
 8000874:	469a      	mov	sl, r3
 8000876:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 800087a:	d807      	bhi.n	800088c <_printf_i+0x28>
 800087c:	2f62      	cmp	r7, #98	@ 0x62
 800087e:	d80a      	bhi.n	8000896 <_printf_i+0x32>
 8000880:	2f00      	cmp	r7, #0
 8000882:	f000 80d2 	beq.w	8000a2a <_printf_i+0x1c6>
 8000886:	2f58      	cmp	r7, #88	@ 0x58
 8000888:	f000 80b9 	beq.w	80009fe <_printf_i+0x19a>
 800088c:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8000890:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 8000894:	e03a      	b.n	800090c <_printf_i+0xa8>
 8000896:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 800089a:	2b15      	cmp	r3, #21
 800089c:	d8f6      	bhi.n	800088c <_printf_i+0x28>
 800089e:	a101      	add	r1, pc, #4	@ (adr r1, 80008a4 <_printf_i+0x40>)
 80008a0:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 80008a4:	080008fd 	.word	0x080008fd
 80008a8:	08000911 	.word	0x08000911
 80008ac:	0800088d 	.word	0x0800088d
 80008b0:	0800088d 	.word	0x0800088d
 80008b4:	0800088d 	.word	0x0800088d
 80008b8:	0800088d 	.word	0x0800088d
 80008bc:	08000911 	.word	0x08000911
 80008c0:	0800088d 	.word	0x0800088d
 80008c4:	0800088d 	.word	0x0800088d
 80008c8:	0800088d 	.word	0x0800088d
 80008cc:	0800088d 	.word	0x0800088d
 80008d0:	08000a11 	.word	0x08000a11
 80008d4:	0800093b 	.word	0x0800093b
 80008d8:	080009cb 	.word	0x080009cb
 80008dc:	0800088d 	.word	0x0800088d
 80008e0:	0800088d 	.word	0x0800088d
 80008e4:	08000a33 	.word	0x08000a33
 80008e8:	0800088d 	.word	0x0800088d
 80008ec:	0800093b 	.word	0x0800093b
 80008f0:	0800088d 	.word	0x0800088d
 80008f4:	0800088d 	.word	0x0800088d
 80008f8:	080009d3 	.word	0x080009d3
 80008fc:	6833      	ldr	r3, [r6, #0]
 80008fe:	1d1a      	adds	r2, r3, #4
 8000900:	681b      	ldr	r3, [r3, #0]
 8000902:	6032      	str	r2, [r6, #0]
 8000904:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8000908:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 800090c:	2301      	movs	r3, #1
 800090e:	e09d      	b.n	8000a4c <_printf_i+0x1e8>
 8000910:	6833      	ldr	r3, [r6, #0]
 8000912:	6820      	ldr	r0, [r4, #0]
 8000914:	1d19      	adds	r1, r3, #4
 8000916:	6031      	str	r1, [r6, #0]
 8000918:	0606      	lsls	r6, r0, #24
 800091a:	d501      	bpl.n	8000920 <_printf_i+0xbc>
 800091c:	681d      	ldr	r5, [r3, #0]
 800091e:	e003      	b.n	8000928 <_printf_i+0xc4>
 8000920:	0645      	lsls	r5, r0, #25
 8000922:	d5fb      	bpl.n	800091c <_printf_i+0xb8>
 8000924:	f9b3 5000 	ldrsh.w	r5, [r3]
 8000928:	2d00      	cmp	r5, #0
 800092a:	da03      	bge.n	8000934 <_printf_i+0xd0>
 800092c:	232d      	movs	r3, #45	@ 0x2d
 800092e:	426d      	negs	r5, r5
 8000930:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8000934:	4859      	ldr	r0, [pc, #356]	@ (8000a9c <_printf_i+0x238>)
 8000936:	230a      	movs	r3, #10
 8000938:	e011      	b.n	800095e <_printf_i+0xfa>
 800093a:	6821      	ldr	r1, [r4, #0]
 800093c:	6833      	ldr	r3, [r6, #0]
 800093e:	0608      	lsls	r0, r1, #24
 8000940:	f853 5b04 	ldr.w	r5, [r3], #4
 8000944:	d402      	bmi.n	800094c <_printf_i+0xe8>
 8000946:	0649      	lsls	r1, r1, #25
 8000948:	bf48      	it	mi
 800094a:	b2ad      	uxthmi	r5, r5
 800094c:	2f6f      	cmp	r7, #111	@ 0x6f
 800094e:	4853      	ldr	r0, [pc, #332]	@ (8000a9c <_printf_i+0x238>)
 8000950:	6033      	str	r3, [r6, #0]
 8000952:	bf14      	ite	ne
 8000954:	230a      	movne	r3, #10
 8000956:	2308      	moveq	r3, #8
 8000958:	2100      	movs	r1, #0
 800095a:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 800095e:	6866      	ldr	r6, [r4, #4]
 8000960:	60a6      	str	r6, [r4, #8]
 8000962:	2e00      	cmp	r6, #0
 8000964:	bfa2      	ittt	ge
 8000966:	6821      	ldrge	r1, [r4, #0]
 8000968:	f021 0104 	bicge.w	r1, r1, #4
 800096c:	6021      	strge	r1, [r4, #0]
 800096e:	b90d      	cbnz	r5, 8000974 <_printf_i+0x110>
 8000970:	2e00      	cmp	r6, #0
 8000972:	d04b      	beq.n	8000a0c <_printf_i+0x1a8>
 8000974:	4616      	mov	r6, r2
 8000976:	fbb5 f1f3 	udiv	r1, r5, r3
 800097a:	fb03 5711 	mls	r7, r3, r1, r5
 800097e:	5dc7      	ldrb	r7, [r0, r7]
 8000980:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8000984:	462f      	mov	r7, r5
 8000986:	42bb      	cmp	r3, r7
 8000988:	460d      	mov	r5, r1
 800098a:	d9f4      	bls.n	8000976 <_printf_i+0x112>
 800098c:	2b08      	cmp	r3, #8
 800098e:	d10b      	bne.n	80009a8 <_printf_i+0x144>
 8000990:	6823      	ldr	r3, [r4, #0]
 8000992:	07df      	lsls	r7, r3, #31
 8000994:	d508      	bpl.n	80009a8 <_printf_i+0x144>
 8000996:	6923      	ldr	r3, [r4, #16]
 8000998:	6861      	ldr	r1, [r4, #4]
 800099a:	4299      	cmp	r1, r3
 800099c:	bfde      	ittt	le
 800099e:	2330      	movle	r3, #48	@ 0x30
 80009a0:	f806 3c01 	strble.w	r3, [r6, #-1]
 80009a4:	f106 36ff 	addle.w	r6, r6, #4294967295	@ 0xffffffff
 80009a8:	1b92      	subs	r2, r2, r6
 80009aa:	6122      	str	r2, [r4, #16]
 80009ac:	f8cd a000 	str.w	sl, [sp]
 80009b0:	464b      	mov	r3, r9
 80009b2:	aa03      	add	r2, sp, #12
 80009b4:	4621      	mov	r1, r4
 80009b6:	4640      	mov	r0, r8
 80009b8:	f7ff fee6 	bl	8000788 <_printf_common>
 80009bc:	3001      	adds	r0, #1
 80009be:	d14a      	bne.n	8000a56 <_printf_i+0x1f2>
 80009c0:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 80009c4:	b004      	add	sp, #16
 80009c6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80009ca:	6823      	ldr	r3, [r4, #0]
 80009cc:	f043 0320 	orr.w	r3, r3, #32
 80009d0:	6023      	str	r3, [r4, #0]
 80009d2:	4833      	ldr	r0, [pc, #204]	@ (8000aa0 <_printf_i+0x23c>)
 80009d4:	2778      	movs	r7, #120	@ 0x78
 80009d6:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 80009da:	6823      	ldr	r3, [r4, #0]
 80009dc:	6831      	ldr	r1, [r6, #0]
 80009de:	061f      	lsls	r7, r3, #24
 80009e0:	f851 5b04 	ldr.w	r5, [r1], #4
 80009e4:	d402      	bmi.n	80009ec <_printf_i+0x188>
 80009e6:	065f      	lsls	r7, r3, #25
 80009e8:	bf48      	it	mi
 80009ea:	b2ad      	uxthmi	r5, r5
 80009ec:	6031      	str	r1, [r6, #0]
 80009ee:	07d9      	lsls	r1, r3, #31
 80009f0:	bf44      	itt	mi
 80009f2:	f043 0320 	orrmi.w	r3, r3, #32
 80009f6:	6023      	strmi	r3, [r4, #0]
 80009f8:	b11d      	cbz	r5, 8000a02 <_printf_i+0x19e>
 80009fa:	2310      	movs	r3, #16
 80009fc:	e7ac      	b.n	8000958 <_printf_i+0xf4>
 80009fe:	4827      	ldr	r0, [pc, #156]	@ (8000a9c <_printf_i+0x238>)
 8000a00:	e7e9      	b.n	80009d6 <_printf_i+0x172>
 8000a02:	6823      	ldr	r3, [r4, #0]
 8000a04:	f023 0320 	bic.w	r3, r3, #32
 8000a08:	6023      	str	r3, [r4, #0]
 8000a0a:	e7f6      	b.n	80009fa <_printf_i+0x196>
 8000a0c:	4616      	mov	r6, r2
 8000a0e:	e7bd      	b.n	800098c <_printf_i+0x128>
 8000a10:	6833      	ldr	r3, [r6, #0]
 8000a12:	6825      	ldr	r5, [r4, #0]
 8000a14:	6961      	ldr	r1, [r4, #20]
 8000a16:	1d18      	adds	r0, r3, #4
 8000a18:	6030      	str	r0, [r6, #0]
 8000a1a:	062e      	lsls	r6, r5, #24
 8000a1c:	681b      	ldr	r3, [r3, #0]
 8000a1e:	d501      	bpl.n	8000a24 <_printf_i+0x1c0>
 8000a20:	6019      	str	r1, [r3, #0]
 8000a22:	e002      	b.n	8000a2a <_printf_i+0x1c6>
 8000a24:	0668      	lsls	r0, r5, #25
 8000a26:	d5fb      	bpl.n	8000a20 <_printf_i+0x1bc>
 8000a28:	8019      	strh	r1, [r3, #0]
 8000a2a:	2300      	movs	r3, #0
 8000a2c:	6123      	str	r3, [r4, #16]
 8000a2e:	4616      	mov	r6, r2
 8000a30:	e7bc      	b.n	80009ac <_printf_i+0x148>
 8000a32:	6833      	ldr	r3, [r6, #0]
 8000a34:	1d1a      	adds	r2, r3, #4
 8000a36:	6032      	str	r2, [r6, #0]
 8000a38:	681e      	ldr	r6, [r3, #0]
 8000a3a:	6862      	ldr	r2, [r4, #4]
 8000a3c:	2100      	movs	r1, #0
 8000a3e:	4630      	mov	r0, r6
 8000a40:	f7ff fbc6 	bl	80001d0 <memchr>
 8000a44:	b108      	cbz	r0, 8000a4a <_printf_i+0x1e6>
 8000a46:	1b80      	subs	r0, r0, r6
 8000a48:	6060      	str	r0, [r4, #4]
 8000a4a:	6863      	ldr	r3, [r4, #4]
 8000a4c:	6123      	str	r3, [r4, #16]
 8000a4e:	2300      	movs	r3, #0
 8000a50:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8000a54:	e7aa      	b.n	80009ac <_printf_i+0x148>
 8000a56:	6923      	ldr	r3, [r4, #16]
 8000a58:	4632      	mov	r2, r6
 8000a5a:	4649      	mov	r1, r9
 8000a5c:	4640      	mov	r0, r8
 8000a5e:	47d0      	blx	sl
 8000a60:	3001      	adds	r0, #1
 8000a62:	d0ad      	beq.n	80009c0 <_printf_i+0x15c>
 8000a64:	6823      	ldr	r3, [r4, #0]
 8000a66:	079b      	lsls	r3, r3, #30
 8000a68:	d413      	bmi.n	8000a92 <_printf_i+0x22e>
 8000a6a:	68e0      	ldr	r0, [r4, #12]
 8000a6c:	9b03      	ldr	r3, [sp, #12]
 8000a6e:	4298      	cmp	r0, r3
 8000a70:	bfb8      	it	lt
 8000a72:	4618      	movlt	r0, r3
 8000a74:	e7a6      	b.n	80009c4 <_printf_i+0x160>
 8000a76:	2301      	movs	r3, #1
 8000a78:	4632      	mov	r2, r6
 8000a7a:	4649      	mov	r1, r9
 8000a7c:	4640      	mov	r0, r8
 8000a7e:	47d0      	blx	sl
 8000a80:	3001      	adds	r0, #1
 8000a82:	d09d      	beq.n	80009c0 <_printf_i+0x15c>
 8000a84:	3501      	adds	r5, #1
 8000a86:	68e3      	ldr	r3, [r4, #12]
 8000a88:	9903      	ldr	r1, [sp, #12]
 8000a8a:	1a5b      	subs	r3, r3, r1
 8000a8c:	42ab      	cmp	r3, r5
 8000a8e:	dcf2      	bgt.n	8000a76 <_printf_i+0x212>
 8000a90:	e7eb      	b.n	8000a6a <_printf_i+0x206>
 8000a92:	2500      	movs	r5, #0
 8000a94:	f104 0619 	add.w	r6, r4, #25
 8000a98:	e7f5      	b.n	8000a86 <_printf_i+0x222>
 8000a9a:	bf00      	nop
 8000a9c:	080014d4 	.word	0x080014d4
 8000aa0:	080014e5 	.word	0x080014e5

08000aa4 <std>:
 8000aa4:	2300      	movs	r3, #0
 8000aa6:	b510      	push	{r4, lr}
 8000aa8:	4604      	mov	r4, r0
 8000aaa:	e9c0 3300 	strd	r3, r3, [r0]
 8000aae:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8000ab2:	6083      	str	r3, [r0, #8]
 8000ab4:	8181      	strh	r1, [r0, #12]
 8000ab6:	6643      	str	r3, [r0, #100]	@ 0x64
 8000ab8:	81c2      	strh	r2, [r0, #14]
 8000aba:	6183      	str	r3, [r0, #24]
 8000abc:	4619      	mov	r1, r3
 8000abe:	2208      	movs	r2, #8
 8000ac0:	305c      	adds	r0, #92	@ 0x5c
 8000ac2:	f000 f9a3 	bl	8000e0c <memset>
 8000ac6:	4b0d      	ldr	r3, [pc, #52]	@ (8000afc <std+0x58>)
 8000ac8:	6263      	str	r3, [r4, #36]	@ 0x24
 8000aca:	4b0d      	ldr	r3, [pc, #52]	@ (8000b00 <std+0x5c>)
 8000acc:	62a3      	str	r3, [r4, #40]	@ 0x28
 8000ace:	4b0d      	ldr	r3, [pc, #52]	@ (8000b04 <std+0x60>)
 8000ad0:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8000ad2:	4b0d      	ldr	r3, [pc, #52]	@ (8000b08 <std+0x64>)
 8000ad4:	6323      	str	r3, [r4, #48]	@ 0x30
 8000ad6:	4b0d      	ldr	r3, [pc, #52]	@ (8000b0c <std+0x68>)
 8000ad8:	6224      	str	r4, [r4, #32]
 8000ada:	429c      	cmp	r4, r3
 8000adc:	d006      	beq.n	8000aec <std+0x48>
 8000ade:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 8000ae2:	4294      	cmp	r4, r2
 8000ae4:	d002      	beq.n	8000aec <std+0x48>
 8000ae6:	33d0      	adds	r3, #208	@ 0xd0
 8000ae8:	429c      	cmp	r4, r3
 8000aea:	d105      	bne.n	8000af8 <std+0x54>
 8000aec:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 8000af0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000af4:	f000 b9fc 	b.w	8000ef0 <__retarget_lock_init_recursive>
 8000af8:	bd10      	pop	{r4, pc}
 8000afa:	bf00      	nop
 8000afc:	08000c5d 	.word	0x08000c5d
 8000b00:	08000c7f 	.word	0x08000c7f
 8000b04:	08000cb7 	.word	0x08000cb7
 8000b08:	08000cdb 	.word	0x08000cdb
 8000b0c:	2000007c 	.word	0x2000007c

08000b10 <stdio_exit_handler>:
 8000b10:	4a02      	ldr	r2, [pc, #8]	@ (8000b1c <stdio_exit_handler+0xc>)
 8000b12:	4903      	ldr	r1, [pc, #12]	@ (8000b20 <stdio_exit_handler+0x10>)
 8000b14:	4803      	ldr	r0, [pc, #12]	@ (8000b24 <stdio_exit_handler+0x14>)
 8000b16:	f000 b869 	b.w	8000bec <_fwalk_sglue>
 8000b1a:	bf00      	nop
 8000b1c:	20000004 	.word	0x20000004
 8000b20:	080011f1 	.word	0x080011f1
 8000b24:	20000014 	.word	0x20000014

08000b28 <cleanup_stdio>:
 8000b28:	6841      	ldr	r1, [r0, #4]
 8000b2a:	4b0c      	ldr	r3, [pc, #48]	@ (8000b5c <cleanup_stdio+0x34>)
 8000b2c:	4299      	cmp	r1, r3
 8000b2e:	b510      	push	{r4, lr}
 8000b30:	4604      	mov	r4, r0
 8000b32:	d001      	beq.n	8000b38 <cleanup_stdio+0x10>
 8000b34:	f000 fb5c 	bl	80011f0 <_fflush_r>
 8000b38:	68a1      	ldr	r1, [r4, #8]
 8000b3a:	4b09      	ldr	r3, [pc, #36]	@ (8000b60 <cleanup_stdio+0x38>)
 8000b3c:	4299      	cmp	r1, r3
 8000b3e:	d002      	beq.n	8000b46 <cleanup_stdio+0x1e>
 8000b40:	4620      	mov	r0, r4
 8000b42:	f000 fb55 	bl	80011f0 <_fflush_r>
 8000b46:	68e1      	ldr	r1, [r4, #12]
 8000b48:	4b06      	ldr	r3, [pc, #24]	@ (8000b64 <cleanup_stdio+0x3c>)
 8000b4a:	4299      	cmp	r1, r3
 8000b4c:	d004      	beq.n	8000b58 <cleanup_stdio+0x30>
 8000b4e:	4620      	mov	r0, r4
 8000b50:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000b54:	f000 bb4c 	b.w	80011f0 <_fflush_r>
 8000b58:	bd10      	pop	{r4, pc}
 8000b5a:	bf00      	nop
 8000b5c:	2000007c 	.word	0x2000007c
 8000b60:	200000e4 	.word	0x200000e4
 8000b64:	2000014c 	.word	0x2000014c

08000b68 <global_stdio_init.part.0>:
 8000b68:	b510      	push	{r4, lr}
 8000b6a:	4b0b      	ldr	r3, [pc, #44]	@ (8000b98 <global_stdio_init.part.0+0x30>)
 8000b6c:	4c0b      	ldr	r4, [pc, #44]	@ (8000b9c <global_stdio_init.part.0+0x34>)
 8000b6e:	4a0c      	ldr	r2, [pc, #48]	@ (8000ba0 <global_stdio_init.part.0+0x38>)
 8000b70:	601a      	str	r2, [r3, #0]
 8000b72:	4620      	mov	r0, r4
 8000b74:	2200      	movs	r2, #0
 8000b76:	2104      	movs	r1, #4
 8000b78:	f7ff ff94 	bl	8000aa4 <std>
 8000b7c:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 8000b80:	2201      	movs	r2, #1
 8000b82:	2109      	movs	r1, #9
 8000b84:	f7ff ff8e 	bl	8000aa4 <std>
 8000b88:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 8000b8c:	2202      	movs	r2, #2
 8000b8e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000b92:	2112      	movs	r1, #18
 8000b94:	f7ff bf86 	b.w	8000aa4 <std>
 8000b98:	200001b4 	.word	0x200001b4
 8000b9c:	2000007c 	.word	0x2000007c
 8000ba0:	08000b11 	.word	0x08000b11

08000ba4 <__sfp_lock_acquire>:
 8000ba4:	4801      	ldr	r0, [pc, #4]	@ (8000bac <__sfp_lock_acquire+0x8>)
 8000ba6:	f000 b9a4 	b.w	8000ef2 <__retarget_lock_acquire_recursive>
 8000baa:	bf00      	nop
 8000bac:	200001bd 	.word	0x200001bd

08000bb0 <__sfp_lock_release>:
 8000bb0:	4801      	ldr	r0, [pc, #4]	@ (8000bb8 <__sfp_lock_release+0x8>)
 8000bb2:	f000 b99f 	b.w	8000ef4 <__retarget_lock_release_recursive>
 8000bb6:	bf00      	nop
 8000bb8:	200001bd 	.word	0x200001bd

08000bbc <__sinit>:
 8000bbc:	b510      	push	{r4, lr}
 8000bbe:	4604      	mov	r4, r0
 8000bc0:	f7ff fff0 	bl	8000ba4 <__sfp_lock_acquire>
 8000bc4:	6a23      	ldr	r3, [r4, #32]
 8000bc6:	b11b      	cbz	r3, 8000bd0 <__sinit+0x14>
 8000bc8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000bcc:	f7ff bff0 	b.w	8000bb0 <__sfp_lock_release>
 8000bd0:	4b04      	ldr	r3, [pc, #16]	@ (8000be4 <__sinit+0x28>)
 8000bd2:	6223      	str	r3, [r4, #32]
 8000bd4:	4b04      	ldr	r3, [pc, #16]	@ (8000be8 <__sinit+0x2c>)
 8000bd6:	681b      	ldr	r3, [r3, #0]
 8000bd8:	2b00      	cmp	r3, #0
 8000bda:	d1f5      	bne.n	8000bc8 <__sinit+0xc>
 8000bdc:	f7ff ffc4 	bl	8000b68 <global_stdio_init.part.0>
 8000be0:	e7f2      	b.n	8000bc8 <__sinit+0xc>
 8000be2:	bf00      	nop
 8000be4:	08000b29 	.word	0x08000b29
 8000be8:	200001b4 	.word	0x200001b4

08000bec <_fwalk_sglue>:
 8000bec:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000bf0:	4607      	mov	r7, r0
 8000bf2:	4688      	mov	r8, r1
 8000bf4:	4614      	mov	r4, r2
 8000bf6:	2600      	movs	r6, #0
 8000bf8:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8000bfc:	f1b9 0901 	subs.w	r9, r9, #1
 8000c00:	d505      	bpl.n	8000c0e <_fwalk_sglue+0x22>
 8000c02:	6824      	ldr	r4, [r4, #0]
 8000c04:	2c00      	cmp	r4, #0
 8000c06:	d1f7      	bne.n	8000bf8 <_fwalk_sglue+0xc>
 8000c08:	4630      	mov	r0, r6
 8000c0a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000c0e:	89ab      	ldrh	r3, [r5, #12]
 8000c10:	2b01      	cmp	r3, #1
 8000c12:	d907      	bls.n	8000c24 <_fwalk_sglue+0x38>
 8000c14:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8000c18:	3301      	adds	r3, #1
 8000c1a:	d003      	beq.n	8000c24 <_fwalk_sglue+0x38>
 8000c1c:	4629      	mov	r1, r5
 8000c1e:	4638      	mov	r0, r7
 8000c20:	47c0      	blx	r8
 8000c22:	4306      	orrs	r6, r0
 8000c24:	3568      	adds	r5, #104	@ 0x68
 8000c26:	e7e9      	b.n	8000bfc <_fwalk_sglue+0x10>

08000c28 <iprintf>:
 8000c28:	b40f      	push	{r0, r1, r2, r3}
 8000c2a:	b507      	push	{r0, r1, r2, lr}
 8000c2c:	4906      	ldr	r1, [pc, #24]	@ (8000c48 <iprintf+0x20>)
 8000c2e:	ab04      	add	r3, sp, #16
 8000c30:	6808      	ldr	r0, [r1, #0]
 8000c32:	f853 2b04 	ldr.w	r2, [r3], #4
 8000c36:	6881      	ldr	r1, [r0, #8]
 8000c38:	9301      	str	r3, [sp, #4]
 8000c3a:	f7ff fc83 	bl	8000544 <_vfiprintf_r>
 8000c3e:	b003      	add	sp, #12
 8000c40:	f85d eb04 	ldr.w	lr, [sp], #4
 8000c44:	b004      	add	sp, #16
 8000c46:	4770      	bx	lr
 8000c48:	20000010 	.word	0x20000010

08000c4c <putchar>:
 8000c4c:	4b02      	ldr	r3, [pc, #8]	@ (8000c58 <putchar+0xc>)
 8000c4e:	4601      	mov	r1, r0
 8000c50:	6818      	ldr	r0, [r3, #0]
 8000c52:	6882      	ldr	r2, [r0, #8]
 8000c54:	f000 bb56 	b.w	8001304 <_putc_r>
 8000c58:	20000010 	.word	0x20000010

08000c5c <__sread>:
 8000c5c:	b510      	push	{r4, lr}
 8000c5e:	460c      	mov	r4, r1
 8000c60:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000c64:	f000 f8fc 	bl	8000e60 <_read_r>
 8000c68:	2800      	cmp	r0, #0
 8000c6a:	bfab      	itete	ge
 8000c6c:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 8000c6e:	89a3      	ldrhlt	r3, [r4, #12]
 8000c70:	181b      	addge	r3, r3, r0
 8000c72:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 8000c76:	bfac      	ite	ge
 8000c78:	6563      	strge	r3, [r4, #84]	@ 0x54
 8000c7a:	81a3      	strhlt	r3, [r4, #12]
 8000c7c:	bd10      	pop	{r4, pc}

08000c7e <__swrite>:
 8000c7e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000c82:	461f      	mov	r7, r3
 8000c84:	898b      	ldrh	r3, [r1, #12]
 8000c86:	05db      	lsls	r3, r3, #23
 8000c88:	4605      	mov	r5, r0
 8000c8a:	460c      	mov	r4, r1
 8000c8c:	4616      	mov	r6, r2
 8000c8e:	d505      	bpl.n	8000c9c <__swrite+0x1e>
 8000c90:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000c94:	2302      	movs	r3, #2
 8000c96:	2200      	movs	r2, #0
 8000c98:	f000 f8d0 	bl	8000e3c <_lseek_r>
 8000c9c:	89a3      	ldrh	r3, [r4, #12]
 8000c9e:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000ca2:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8000ca6:	81a3      	strh	r3, [r4, #12]
 8000ca8:	4632      	mov	r2, r6
 8000caa:	463b      	mov	r3, r7
 8000cac:	4628      	mov	r0, r5
 8000cae:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8000cb2:	f000 b8e7 	b.w	8000e84 <_write_r>

08000cb6 <__sseek>:
 8000cb6:	b510      	push	{r4, lr}
 8000cb8:	460c      	mov	r4, r1
 8000cba:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000cbe:	f000 f8bd 	bl	8000e3c <_lseek_r>
 8000cc2:	1c43      	adds	r3, r0, #1
 8000cc4:	89a3      	ldrh	r3, [r4, #12]
 8000cc6:	bf15      	itete	ne
 8000cc8:	6560      	strne	r0, [r4, #84]	@ 0x54
 8000cca:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 8000cce:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 8000cd2:	81a3      	strheq	r3, [r4, #12]
 8000cd4:	bf18      	it	ne
 8000cd6:	81a3      	strhne	r3, [r4, #12]
 8000cd8:	bd10      	pop	{r4, pc}

08000cda <__sclose>:
 8000cda:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000cde:	f000 b89d 	b.w	8000e1c <_close_r>

08000ce2 <__swbuf_r>:
 8000ce2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000ce4:	460e      	mov	r6, r1
 8000ce6:	4614      	mov	r4, r2
 8000ce8:	4605      	mov	r5, r0
 8000cea:	b118      	cbz	r0, 8000cf4 <__swbuf_r+0x12>
 8000cec:	6a03      	ldr	r3, [r0, #32]
 8000cee:	b90b      	cbnz	r3, 8000cf4 <__swbuf_r+0x12>
 8000cf0:	f7ff ff64 	bl	8000bbc <__sinit>
 8000cf4:	69a3      	ldr	r3, [r4, #24]
 8000cf6:	60a3      	str	r3, [r4, #8]
 8000cf8:	89a3      	ldrh	r3, [r4, #12]
 8000cfa:	071a      	lsls	r2, r3, #28
 8000cfc:	d501      	bpl.n	8000d02 <__swbuf_r+0x20>
 8000cfe:	6923      	ldr	r3, [r4, #16]
 8000d00:	b943      	cbnz	r3, 8000d14 <__swbuf_r+0x32>
 8000d02:	4621      	mov	r1, r4
 8000d04:	4628      	mov	r0, r5
 8000d06:	f000 f82b 	bl	8000d60 <__swsetup_r>
 8000d0a:	b118      	cbz	r0, 8000d14 <__swbuf_r+0x32>
 8000d0c:	f04f 37ff 	mov.w	r7, #4294967295	@ 0xffffffff
 8000d10:	4638      	mov	r0, r7
 8000d12:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000d14:	6823      	ldr	r3, [r4, #0]
 8000d16:	6922      	ldr	r2, [r4, #16]
 8000d18:	1a98      	subs	r0, r3, r2
 8000d1a:	6963      	ldr	r3, [r4, #20]
 8000d1c:	b2f6      	uxtb	r6, r6
 8000d1e:	4283      	cmp	r3, r0
 8000d20:	4637      	mov	r7, r6
 8000d22:	dc05      	bgt.n	8000d30 <__swbuf_r+0x4e>
 8000d24:	4621      	mov	r1, r4
 8000d26:	4628      	mov	r0, r5
 8000d28:	f000 fa62 	bl	80011f0 <_fflush_r>
 8000d2c:	2800      	cmp	r0, #0
 8000d2e:	d1ed      	bne.n	8000d0c <__swbuf_r+0x2a>
 8000d30:	68a3      	ldr	r3, [r4, #8]
 8000d32:	3b01      	subs	r3, #1
 8000d34:	60a3      	str	r3, [r4, #8]
 8000d36:	6823      	ldr	r3, [r4, #0]
 8000d38:	1c5a      	adds	r2, r3, #1
 8000d3a:	6022      	str	r2, [r4, #0]
 8000d3c:	701e      	strb	r6, [r3, #0]
 8000d3e:	6962      	ldr	r2, [r4, #20]
 8000d40:	1c43      	adds	r3, r0, #1
 8000d42:	429a      	cmp	r2, r3
 8000d44:	d004      	beq.n	8000d50 <__swbuf_r+0x6e>
 8000d46:	89a3      	ldrh	r3, [r4, #12]
 8000d48:	07db      	lsls	r3, r3, #31
 8000d4a:	d5e1      	bpl.n	8000d10 <__swbuf_r+0x2e>
 8000d4c:	2e0a      	cmp	r6, #10
 8000d4e:	d1df      	bne.n	8000d10 <__swbuf_r+0x2e>
 8000d50:	4621      	mov	r1, r4
 8000d52:	4628      	mov	r0, r5
 8000d54:	f000 fa4c 	bl	80011f0 <_fflush_r>
 8000d58:	2800      	cmp	r0, #0
 8000d5a:	d0d9      	beq.n	8000d10 <__swbuf_r+0x2e>
 8000d5c:	e7d6      	b.n	8000d0c <__swbuf_r+0x2a>
	...

08000d60 <__swsetup_r>:
 8000d60:	b538      	push	{r3, r4, r5, lr}
 8000d62:	4b29      	ldr	r3, [pc, #164]	@ (8000e08 <__swsetup_r+0xa8>)
 8000d64:	4605      	mov	r5, r0
 8000d66:	6818      	ldr	r0, [r3, #0]
 8000d68:	460c      	mov	r4, r1
 8000d6a:	b118      	cbz	r0, 8000d74 <__swsetup_r+0x14>
 8000d6c:	6a03      	ldr	r3, [r0, #32]
 8000d6e:	b90b      	cbnz	r3, 8000d74 <__swsetup_r+0x14>
 8000d70:	f7ff ff24 	bl	8000bbc <__sinit>
 8000d74:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000d78:	0719      	lsls	r1, r3, #28
 8000d7a:	d422      	bmi.n	8000dc2 <__swsetup_r+0x62>
 8000d7c:	06da      	lsls	r2, r3, #27
 8000d7e:	d407      	bmi.n	8000d90 <__swsetup_r+0x30>
 8000d80:	2209      	movs	r2, #9
 8000d82:	602a      	str	r2, [r5, #0]
 8000d84:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8000d88:	81a3      	strh	r3, [r4, #12]
 8000d8a:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8000d8e:	e033      	b.n	8000df8 <__swsetup_r+0x98>
 8000d90:	0758      	lsls	r0, r3, #29
 8000d92:	d512      	bpl.n	8000dba <__swsetup_r+0x5a>
 8000d94:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8000d96:	b141      	cbz	r1, 8000daa <__swsetup_r+0x4a>
 8000d98:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8000d9c:	4299      	cmp	r1, r3
 8000d9e:	d002      	beq.n	8000da6 <__swsetup_r+0x46>
 8000da0:	4628      	mov	r0, r5
 8000da2:	f000 f8a9 	bl	8000ef8 <_free_r>
 8000da6:	2300      	movs	r3, #0
 8000da8:	6363      	str	r3, [r4, #52]	@ 0x34
 8000daa:	89a3      	ldrh	r3, [r4, #12]
 8000dac:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 8000db0:	81a3      	strh	r3, [r4, #12]
 8000db2:	2300      	movs	r3, #0
 8000db4:	6063      	str	r3, [r4, #4]
 8000db6:	6923      	ldr	r3, [r4, #16]
 8000db8:	6023      	str	r3, [r4, #0]
 8000dba:	89a3      	ldrh	r3, [r4, #12]
 8000dbc:	f043 0308 	orr.w	r3, r3, #8
 8000dc0:	81a3      	strh	r3, [r4, #12]
 8000dc2:	6923      	ldr	r3, [r4, #16]
 8000dc4:	b94b      	cbnz	r3, 8000dda <__swsetup_r+0x7a>
 8000dc6:	89a3      	ldrh	r3, [r4, #12]
 8000dc8:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 8000dcc:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8000dd0:	d003      	beq.n	8000dda <__swsetup_r+0x7a>
 8000dd2:	4621      	mov	r1, r4
 8000dd4:	4628      	mov	r0, r5
 8000dd6:	f000 fa59 	bl	800128c <__smakebuf_r>
 8000dda:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000dde:	f013 0201 	ands.w	r2, r3, #1
 8000de2:	d00a      	beq.n	8000dfa <__swsetup_r+0x9a>
 8000de4:	2200      	movs	r2, #0
 8000de6:	60a2      	str	r2, [r4, #8]
 8000de8:	6962      	ldr	r2, [r4, #20]
 8000dea:	4252      	negs	r2, r2
 8000dec:	61a2      	str	r2, [r4, #24]
 8000dee:	6922      	ldr	r2, [r4, #16]
 8000df0:	b942      	cbnz	r2, 8000e04 <__swsetup_r+0xa4>
 8000df2:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 8000df6:	d1c5      	bne.n	8000d84 <__swsetup_r+0x24>
 8000df8:	bd38      	pop	{r3, r4, r5, pc}
 8000dfa:	0799      	lsls	r1, r3, #30
 8000dfc:	bf58      	it	pl
 8000dfe:	6962      	ldrpl	r2, [r4, #20]
 8000e00:	60a2      	str	r2, [r4, #8]
 8000e02:	e7f4      	b.n	8000dee <__swsetup_r+0x8e>
 8000e04:	2000      	movs	r0, #0
 8000e06:	e7f7      	b.n	8000df8 <__swsetup_r+0x98>
 8000e08:	20000010 	.word	0x20000010

08000e0c <memset>:
 8000e0c:	4402      	add	r2, r0
 8000e0e:	4603      	mov	r3, r0
 8000e10:	4293      	cmp	r3, r2
 8000e12:	d100      	bne.n	8000e16 <memset+0xa>
 8000e14:	4770      	bx	lr
 8000e16:	f803 1b01 	strb.w	r1, [r3], #1
 8000e1a:	e7f9      	b.n	8000e10 <memset+0x4>

08000e1c <_close_r>:
 8000e1c:	b538      	push	{r3, r4, r5, lr}
 8000e1e:	4d06      	ldr	r5, [pc, #24]	@ (8000e38 <_close_r+0x1c>)
 8000e20:	2300      	movs	r3, #0
 8000e22:	4604      	mov	r4, r0
 8000e24:	4608      	mov	r0, r1
 8000e26:	602b      	str	r3, [r5, #0]
 8000e28:	f000 fad2 	bl	80013d0 <_close>
 8000e2c:	1c43      	adds	r3, r0, #1
 8000e2e:	d102      	bne.n	8000e36 <_close_r+0x1a>
 8000e30:	682b      	ldr	r3, [r5, #0]
 8000e32:	b103      	cbz	r3, 8000e36 <_close_r+0x1a>
 8000e34:	6023      	str	r3, [r4, #0]
 8000e36:	bd38      	pop	{r3, r4, r5, pc}
 8000e38:	200001b8 	.word	0x200001b8

08000e3c <_lseek_r>:
 8000e3c:	b538      	push	{r3, r4, r5, lr}
 8000e3e:	4d07      	ldr	r5, [pc, #28]	@ (8000e5c <_lseek_r+0x20>)
 8000e40:	4604      	mov	r4, r0
 8000e42:	4608      	mov	r0, r1
 8000e44:	4611      	mov	r1, r2
 8000e46:	2200      	movs	r2, #0
 8000e48:	602a      	str	r2, [r5, #0]
 8000e4a:	461a      	mov	r2, r3
 8000e4c:	f000 fad8 	bl	8001400 <_lseek>
 8000e50:	1c43      	adds	r3, r0, #1
 8000e52:	d102      	bne.n	8000e5a <_lseek_r+0x1e>
 8000e54:	682b      	ldr	r3, [r5, #0]
 8000e56:	b103      	cbz	r3, 8000e5a <_lseek_r+0x1e>
 8000e58:	6023      	str	r3, [r4, #0]
 8000e5a:	bd38      	pop	{r3, r4, r5, pc}
 8000e5c:	200001b8 	.word	0x200001b8

08000e60 <_read_r>:
 8000e60:	b538      	push	{r3, r4, r5, lr}
 8000e62:	4d07      	ldr	r5, [pc, #28]	@ (8000e80 <_read_r+0x20>)
 8000e64:	4604      	mov	r4, r0
 8000e66:	4608      	mov	r0, r1
 8000e68:	4611      	mov	r1, r2
 8000e6a:	2200      	movs	r2, #0
 8000e6c:	602a      	str	r2, [r5, #0]
 8000e6e:	461a      	mov	r2, r3
 8000e70:	f000 face 	bl	8001410 <_read>
 8000e74:	1c43      	adds	r3, r0, #1
 8000e76:	d102      	bne.n	8000e7e <_read_r+0x1e>
 8000e78:	682b      	ldr	r3, [r5, #0]
 8000e7a:	b103      	cbz	r3, 8000e7e <_read_r+0x1e>
 8000e7c:	6023      	str	r3, [r4, #0]
 8000e7e:	bd38      	pop	{r3, r4, r5, pc}
 8000e80:	200001b8 	.word	0x200001b8

08000e84 <_write_r>:
 8000e84:	b538      	push	{r3, r4, r5, lr}
 8000e86:	4d07      	ldr	r5, [pc, #28]	@ (8000ea4 <_write_r+0x20>)
 8000e88:	4604      	mov	r4, r0
 8000e8a:	4608      	mov	r0, r1
 8000e8c:	4611      	mov	r1, r2
 8000e8e:	2200      	movs	r2, #0
 8000e90:	602a      	str	r2, [r5, #0]
 8000e92:	461a      	mov	r2, r3
 8000e94:	f7ff fa13 	bl	80002be <_write>
 8000e98:	1c43      	adds	r3, r0, #1
 8000e9a:	d102      	bne.n	8000ea2 <_write_r+0x1e>
 8000e9c:	682b      	ldr	r3, [r5, #0]
 8000e9e:	b103      	cbz	r3, 8000ea2 <_write_r+0x1e>
 8000ea0:	6023      	str	r3, [r4, #0]
 8000ea2:	bd38      	pop	{r3, r4, r5, pc}
 8000ea4:	200001b8 	.word	0x200001b8

08000ea8 <__libc_init_array>:
 8000ea8:	b570      	push	{r4, r5, r6, lr}
 8000eaa:	4d0d      	ldr	r5, [pc, #52]	@ (8000ee0 <__libc_init_array+0x38>)
 8000eac:	4c0d      	ldr	r4, [pc, #52]	@ (8000ee4 <__libc_init_array+0x3c>)
 8000eae:	1b64      	subs	r4, r4, r5
 8000eb0:	10a4      	asrs	r4, r4, #2
 8000eb2:	2600      	movs	r6, #0
 8000eb4:	42a6      	cmp	r6, r4
 8000eb6:	d109      	bne.n	8000ecc <__libc_init_array+0x24>
 8000eb8:	4d0b      	ldr	r5, [pc, #44]	@ (8000ee8 <__libc_init_array+0x40>)
 8000eba:	4c0c      	ldr	r4, [pc, #48]	@ (8000eec <__libc_init_array+0x44>)
 8000ebc:	f000 fabe 	bl	800143c <_init>
 8000ec0:	1b64      	subs	r4, r4, r5
 8000ec2:	10a4      	asrs	r4, r4, #2
 8000ec4:	2600      	movs	r6, #0
 8000ec6:	42a6      	cmp	r6, r4
 8000ec8:	d105      	bne.n	8000ed6 <__libc_init_array+0x2e>
 8000eca:	bd70      	pop	{r4, r5, r6, pc}
 8000ecc:	f855 3b04 	ldr.w	r3, [r5], #4
 8000ed0:	4798      	blx	r3
 8000ed2:	3601      	adds	r6, #1
 8000ed4:	e7ee      	b.n	8000eb4 <__libc_init_array+0xc>
 8000ed6:	f855 3b04 	ldr.w	r3, [r5], #4
 8000eda:	4798      	blx	r3
 8000edc:	3601      	adds	r6, #1
 8000ede:	e7f2      	b.n	8000ec6 <__libc_init_array+0x1e>
 8000ee0:	08001500 	.word	0x08001500
 8000ee4:	08001500 	.word	0x08001500
 8000ee8:	08001500 	.word	0x08001500
 8000eec:	08001504 	.word	0x08001504

08000ef0 <__retarget_lock_init_recursive>:
 8000ef0:	4770      	bx	lr

08000ef2 <__retarget_lock_acquire_recursive>:
 8000ef2:	4770      	bx	lr

08000ef4 <__retarget_lock_release_recursive>:
 8000ef4:	4770      	bx	lr
	...

08000ef8 <_free_r>:
 8000ef8:	b538      	push	{r3, r4, r5, lr}
 8000efa:	4605      	mov	r5, r0
 8000efc:	2900      	cmp	r1, #0
 8000efe:	d041      	beq.n	8000f84 <_free_r+0x8c>
 8000f00:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8000f04:	1f0c      	subs	r4, r1, #4
 8000f06:	2b00      	cmp	r3, #0
 8000f08:	bfb8      	it	lt
 8000f0a:	18e4      	addlt	r4, r4, r3
 8000f0c:	f000 f8e0 	bl	80010d0 <__malloc_lock>
 8000f10:	4a1d      	ldr	r2, [pc, #116]	@ (8000f88 <_free_r+0x90>)
 8000f12:	6813      	ldr	r3, [r2, #0]
 8000f14:	b933      	cbnz	r3, 8000f24 <_free_r+0x2c>
 8000f16:	6063      	str	r3, [r4, #4]
 8000f18:	6014      	str	r4, [r2, #0]
 8000f1a:	4628      	mov	r0, r5
 8000f1c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000f20:	f000 b8dc 	b.w	80010dc <__malloc_unlock>
 8000f24:	42a3      	cmp	r3, r4
 8000f26:	d908      	bls.n	8000f3a <_free_r+0x42>
 8000f28:	6820      	ldr	r0, [r4, #0]
 8000f2a:	1821      	adds	r1, r4, r0
 8000f2c:	428b      	cmp	r3, r1
 8000f2e:	bf01      	itttt	eq
 8000f30:	6819      	ldreq	r1, [r3, #0]
 8000f32:	685b      	ldreq	r3, [r3, #4]
 8000f34:	1809      	addeq	r1, r1, r0
 8000f36:	6021      	streq	r1, [r4, #0]
 8000f38:	e7ed      	b.n	8000f16 <_free_r+0x1e>
 8000f3a:	461a      	mov	r2, r3
 8000f3c:	685b      	ldr	r3, [r3, #4]
 8000f3e:	b10b      	cbz	r3, 8000f44 <_free_r+0x4c>
 8000f40:	42a3      	cmp	r3, r4
 8000f42:	d9fa      	bls.n	8000f3a <_free_r+0x42>
 8000f44:	6811      	ldr	r1, [r2, #0]
 8000f46:	1850      	adds	r0, r2, r1
 8000f48:	42a0      	cmp	r0, r4
 8000f4a:	d10b      	bne.n	8000f64 <_free_r+0x6c>
 8000f4c:	6820      	ldr	r0, [r4, #0]
 8000f4e:	4401      	add	r1, r0
 8000f50:	1850      	adds	r0, r2, r1
 8000f52:	4283      	cmp	r3, r0
 8000f54:	6011      	str	r1, [r2, #0]
 8000f56:	d1e0      	bne.n	8000f1a <_free_r+0x22>
 8000f58:	6818      	ldr	r0, [r3, #0]
 8000f5a:	685b      	ldr	r3, [r3, #4]
 8000f5c:	6053      	str	r3, [r2, #4]
 8000f5e:	4408      	add	r0, r1
 8000f60:	6010      	str	r0, [r2, #0]
 8000f62:	e7da      	b.n	8000f1a <_free_r+0x22>
 8000f64:	d902      	bls.n	8000f6c <_free_r+0x74>
 8000f66:	230c      	movs	r3, #12
 8000f68:	602b      	str	r3, [r5, #0]
 8000f6a:	e7d6      	b.n	8000f1a <_free_r+0x22>
 8000f6c:	6820      	ldr	r0, [r4, #0]
 8000f6e:	1821      	adds	r1, r4, r0
 8000f70:	428b      	cmp	r3, r1
 8000f72:	bf04      	itt	eq
 8000f74:	6819      	ldreq	r1, [r3, #0]
 8000f76:	685b      	ldreq	r3, [r3, #4]
 8000f78:	6063      	str	r3, [r4, #4]
 8000f7a:	bf04      	itt	eq
 8000f7c:	1809      	addeq	r1, r1, r0
 8000f7e:	6021      	streq	r1, [r4, #0]
 8000f80:	6054      	str	r4, [r2, #4]
 8000f82:	e7ca      	b.n	8000f1a <_free_r+0x22>
 8000f84:	bd38      	pop	{r3, r4, r5, pc}
 8000f86:	bf00      	nop
 8000f88:	200001c4 	.word	0x200001c4

08000f8c <sbrk_aligned>:
 8000f8c:	b570      	push	{r4, r5, r6, lr}
 8000f8e:	4e0f      	ldr	r6, [pc, #60]	@ (8000fcc <sbrk_aligned+0x40>)
 8000f90:	460c      	mov	r4, r1
 8000f92:	6831      	ldr	r1, [r6, #0]
 8000f94:	4605      	mov	r5, r0
 8000f96:	b911      	cbnz	r1, 8000f9e <sbrk_aligned+0x12>
 8000f98:	f000 fa0a 	bl	80013b0 <_sbrk_r>
 8000f9c:	6030      	str	r0, [r6, #0]
 8000f9e:	4621      	mov	r1, r4
 8000fa0:	4628      	mov	r0, r5
 8000fa2:	f000 fa05 	bl	80013b0 <_sbrk_r>
 8000fa6:	1c43      	adds	r3, r0, #1
 8000fa8:	d103      	bne.n	8000fb2 <sbrk_aligned+0x26>
 8000faa:	f04f 34ff 	mov.w	r4, #4294967295	@ 0xffffffff
 8000fae:	4620      	mov	r0, r4
 8000fb0:	bd70      	pop	{r4, r5, r6, pc}
 8000fb2:	1cc4      	adds	r4, r0, #3
 8000fb4:	f024 0403 	bic.w	r4, r4, #3
 8000fb8:	42a0      	cmp	r0, r4
 8000fba:	d0f8      	beq.n	8000fae <sbrk_aligned+0x22>
 8000fbc:	1a21      	subs	r1, r4, r0
 8000fbe:	4628      	mov	r0, r5
 8000fc0:	f000 f9f6 	bl	80013b0 <_sbrk_r>
 8000fc4:	3001      	adds	r0, #1
 8000fc6:	d1f2      	bne.n	8000fae <sbrk_aligned+0x22>
 8000fc8:	e7ef      	b.n	8000faa <sbrk_aligned+0x1e>
 8000fca:	bf00      	nop
 8000fcc:	200001c0 	.word	0x200001c0

08000fd0 <_malloc_r>:
 8000fd0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000fd4:	1ccd      	adds	r5, r1, #3
 8000fd6:	f025 0503 	bic.w	r5, r5, #3
 8000fda:	3508      	adds	r5, #8
 8000fdc:	2d0c      	cmp	r5, #12
 8000fde:	bf38      	it	cc
 8000fe0:	250c      	movcc	r5, #12
 8000fe2:	2d00      	cmp	r5, #0
 8000fe4:	4606      	mov	r6, r0
 8000fe6:	db01      	blt.n	8000fec <_malloc_r+0x1c>
 8000fe8:	42a9      	cmp	r1, r5
 8000fea:	d904      	bls.n	8000ff6 <_malloc_r+0x26>
 8000fec:	230c      	movs	r3, #12
 8000fee:	6033      	str	r3, [r6, #0]
 8000ff0:	2000      	movs	r0, #0
 8000ff2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000ff6:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 80010cc <_malloc_r+0xfc>
 8000ffa:	f000 f869 	bl	80010d0 <__malloc_lock>
 8000ffe:	f8d8 3000 	ldr.w	r3, [r8]
 8001002:	461c      	mov	r4, r3
 8001004:	bb44      	cbnz	r4, 8001058 <_malloc_r+0x88>
 8001006:	4629      	mov	r1, r5
 8001008:	4630      	mov	r0, r6
 800100a:	f7ff ffbf 	bl	8000f8c <sbrk_aligned>
 800100e:	1c43      	adds	r3, r0, #1
 8001010:	4604      	mov	r4, r0
 8001012:	d158      	bne.n	80010c6 <_malloc_r+0xf6>
 8001014:	f8d8 4000 	ldr.w	r4, [r8]
 8001018:	4627      	mov	r7, r4
 800101a:	2f00      	cmp	r7, #0
 800101c:	d143      	bne.n	80010a6 <_malloc_r+0xd6>
 800101e:	2c00      	cmp	r4, #0
 8001020:	d04b      	beq.n	80010ba <_malloc_r+0xea>
 8001022:	6823      	ldr	r3, [r4, #0]
 8001024:	4639      	mov	r1, r7
 8001026:	4630      	mov	r0, r6
 8001028:	eb04 0903 	add.w	r9, r4, r3
 800102c:	f000 f9c0 	bl	80013b0 <_sbrk_r>
 8001030:	4581      	cmp	r9, r0
 8001032:	d142      	bne.n	80010ba <_malloc_r+0xea>
 8001034:	6821      	ldr	r1, [r4, #0]
 8001036:	1a6d      	subs	r5, r5, r1
 8001038:	4629      	mov	r1, r5
 800103a:	4630      	mov	r0, r6
 800103c:	f7ff ffa6 	bl	8000f8c <sbrk_aligned>
 8001040:	3001      	adds	r0, #1
 8001042:	d03a      	beq.n	80010ba <_malloc_r+0xea>
 8001044:	6823      	ldr	r3, [r4, #0]
 8001046:	442b      	add	r3, r5
 8001048:	6023      	str	r3, [r4, #0]
 800104a:	f8d8 3000 	ldr.w	r3, [r8]
 800104e:	685a      	ldr	r2, [r3, #4]
 8001050:	bb62      	cbnz	r2, 80010ac <_malloc_r+0xdc>
 8001052:	f8c8 7000 	str.w	r7, [r8]
 8001056:	e00f      	b.n	8001078 <_malloc_r+0xa8>
 8001058:	6822      	ldr	r2, [r4, #0]
 800105a:	1b52      	subs	r2, r2, r5
 800105c:	d420      	bmi.n	80010a0 <_malloc_r+0xd0>
 800105e:	2a0b      	cmp	r2, #11
 8001060:	d917      	bls.n	8001092 <_malloc_r+0xc2>
 8001062:	1961      	adds	r1, r4, r5
 8001064:	42a3      	cmp	r3, r4
 8001066:	6025      	str	r5, [r4, #0]
 8001068:	bf18      	it	ne
 800106a:	6059      	strne	r1, [r3, #4]
 800106c:	6863      	ldr	r3, [r4, #4]
 800106e:	bf08      	it	eq
 8001070:	f8c8 1000 	streq.w	r1, [r8]
 8001074:	5162      	str	r2, [r4, r5]
 8001076:	604b      	str	r3, [r1, #4]
 8001078:	4630      	mov	r0, r6
 800107a:	f000 f82f 	bl	80010dc <__malloc_unlock>
 800107e:	f104 000b 	add.w	r0, r4, #11
 8001082:	1d23      	adds	r3, r4, #4
 8001084:	f020 0007 	bic.w	r0, r0, #7
 8001088:	1ac2      	subs	r2, r0, r3
 800108a:	bf1c      	itt	ne
 800108c:	1a1b      	subne	r3, r3, r0
 800108e:	50a3      	strne	r3, [r4, r2]
 8001090:	e7af      	b.n	8000ff2 <_malloc_r+0x22>
 8001092:	6862      	ldr	r2, [r4, #4]
 8001094:	42a3      	cmp	r3, r4
 8001096:	bf0c      	ite	eq
 8001098:	f8c8 2000 	streq.w	r2, [r8]
 800109c:	605a      	strne	r2, [r3, #4]
 800109e:	e7eb      	b.n	8001078 <_malloc_r+0xa8>
 80010a0:	4623      	mov	r3, r4
 80010a2:	6864      	ldr	r4, [r4, #4]
 80010a4:	e7ae      	b.n	8001004 <_malloc_r+0x34>
 80010a6:	463c      	mov	r4, r7
 80010a8:	687f      	ldr	r7, [r7, #4]
 80010aa:	e7b6      	b.n	800101a <_malloc_r+0x4a>
 80010ac:	461a      	mov	r2, r3
 80010ae:	685b      	ldr	r3, [r3, #4]
 80010b0:	42a3      	cmp	r3, r4
 80010b2:	d1fb      	bne.n	80010ac <_malloc_r+0xdc>
 80010b4:	2300      	movs	r3, #0
 80010b6:	6053      	str	r3, [r2, #4]
 80010b8:	e7de      	b.n	8001078 <_malloc_r+0xa8>
 80010ba:	230c      	movs	r3, #12
 80010bc:	6033      	str	r3, [r6, #0]
 80010be:	4630      	mov	r0, r6
 80010c0:	f000 f80c 	bl	80010dc <__malloc_unlock>
 80010c4:	e794      	b.n	8000ff0 <_malloc_r+0x20>
 80010c6:	6005      	str	r5, [r0, #0]
 80010c8:	e7d6      	b.n	8001078 <_malloc_r+0xa8>
 80010ca:	bf00      	nop
 80010cc:	200001c4 	.word	0x200001c4

080010d0 <__malloc_lock>:
 80010d0:	4801      	ldr	r0, [pc, #4]	@ (80010d8 <__malloc_lock+0x8>)
 80010d2:	f7ff bf0e 	b.w	8000ef2 <__retarget_lock_acquire_recursive>
 80010d6:	bf00      	nop
 80010d8:	200001bc 	.word	0x200001bc

080010dc <__malloc_unlock>:
 80010dc:	4801      	ldr	r0, [pc, #4]	@ (80010e4 <__malloc_unlock+0x8>)
 80010de:	f7ff bf09 	b.w	8000ef4 <__retarget_lock_release_recursive>
 80010e2:	bf00      	nop
 80010e4:	200001bc 	.word	0x200001bc

080010e8 <__sflush_r>:
 80010e8:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 80010ec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80010f0:	0716      	lsls	r6, r2, #28
 80010f2:	4605      	mov	r5, r0
 80010f4:	460c      	mov	r4, r1
 80010f6:	d454      	bmi.n	80011a2 <__sflush_r+0xba>
 80010f8:	684b      	ldr	r3, [r1, #4]
 80010fa:	2b00      	cmp	r3, #0
 80010fc:	dc02      	bgt.n	8001104 <__sflush_r+0x1c>
 80010fe:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 8001100:	2b00      	cmp	r3, #0
 8001102:	dd48      	ble.n	8001196 <__sflush_r+0xae>
 8001104:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8001106:	2e00      	cmp	r6, #0
 8001108:	d045      	beq.n	8001196 <__sflush_r+0xae>
 800110a:	2300      	movs	r3, #0
 800110c:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 8001110:	682f      	ldr	r7, [r5, #0]
 8001112:	6a21      	ldr	r1, [r4, #32]
 8001114:	602b      	str	r3, [r5, #0]
 8001116:	d030      	beq.n	800117a <__sflush_r+0x92>
 8001118:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 800111a:	89a3      	ldrh	r3, [r4, #12]
 800111c:	0759      	lsls	r1, r3, #29
 800111e:	d505      	bpl.n	800112c <__sflush_r+0x44>
 8001120:	6863      	ldr	r3, [r4, #4]
 8001122:	1ad2      	subs	r2, r2, r3
 8001124:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 8001126:	b10b      	cbz	r3, 800112c <__sflush_r+0x44>
 8001128:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 800112a:	1ad2      	subs	r2, r2, r3
 800112c:	2300      	movs	r3, #0
 800112e:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8001130:	6a21      	ldr	r1, [r4, #32]
 8001132:	4628      	mov	r0, r5
 8001134:	47b0      	blx	r6
 8001136:	1c43      	adds	r3, r0, #1
 8001138:	89a3      	ldrh	r3, [r4, #12]
 800113a:	d106      	bne.n	800114a <__sflush_r+0x62>
 800113c:	6829      	ldr	r1, [r5, #0]
 800113e:	291d      	cmp	r1, #29
 8001140:	d82b      	bhi.n	800119a <__sflush_r+0xb2>
 8001142:	4a2a      	ldr	r2, [pc, #168]	@ (80011ec <__sflush_r+0x104>)
 8001144:	410a      	asrs	r2, r1
 8001146:	07d6      	lsls	r6, r2, #31
 8001148:	d427      	bmi.n	800119a <__sflush_r+0xb2>
 800114a:	2200      	movs	r2, #0
 800114c:	6062      	str	r2, [r4, #4]
 800114e:	04d9      	lsls	r1, r3, #19
 8001150:	6922      	ldr	r2, [r4, #16]
 8001152:	6022      	str	r2, [r4, #0]
 8001154:	d504      	bpl.n	8001160 <__sflush_r+0x78>
 8001156:	1c42      	adds	r2, r0, #1
 8001158:	d101      	bne.n	800115e <__sflush_r+0x76>
 800115a:	682b      	ldr	r3, [r5, #0]
 800115c:	b903      	cbnz	r3, 8001160 <__sflush_r+0x78>
 800115e:	6560      	str	r0, [r4, #84]	@ 0x54
 8001160:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8001162:	602f      	str	r7, [r5, #0]
 8001164:	b1b9      	cbz	r1, 8001196 <__sflush_r+0xae>
 8001166:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 800116a:	4299      	cmp	r1, r3
 800116c:	d002      	beq.n	8001174 <__sflush_r+0x8c>
 800116e:	4628      	mov	r0, r5
 8001170:	f7ff fec2 	bl	8000ef8 <_free_r>
 8001174:	2300      	movs	r3, #0
 8001176:	6363      	str	r3, [r4, #52]	@ 0x34
 8001178:	e00d      	b.n	8001196 <__sflush_r+0xae>
 800117a:	2301      	movs	r3, #1
 800117c:	4628      	mov	r0, r5
 800117e:	47b0      	blx	r6
 8001180:	4602      	mov	r2, r0
 8001182:	1c50      	adds	r0, r2, #1
 8001184:	d1c9      	bne.n	800111a <__sflush_r+0x32>
 8001186:	682b      	ldr	r3, [r5, #0]
 8001188:	2b00      	cmp	r3, #0
 800118a:	d0c6      	beq.n	800111a <__sflush_r+0x32>
 800118c:	2b1d      	cmp	r3, #29
 800118e:	d001      	beq.n	8001194 <__sflush_r+0xac>
 8001190:	2b16      	cmp	r3, #22
 8001192:	d11e      	bne.n	80011d2 <__sflush_r+0xea>
 8001194:	602f      	str	r7, [r5, #0]
 8001196:	2000      	movs	r0, #0
 8001198:	e022      	b.n	80011e0 <__sflush_r+0xf8>
 800119a:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800119e:	b21b      	sxth	r3, r3
 80011a0:	e01b      	b.n	80011da <__sflush_r+0xf2>
 80011a2:	690f      	ldr	r7, [r1, #16]
 80011a4:	2f00      	cmp	r7, #0
 80011a6:	d0f6      	beq.n	8001196 <__sflush_r+0xae>
 80011a8:	0793      	lsls	r3, r2, #30
 80011aa:	680e      	ldr	r6, [r1, #0]
 80011ac:	bf08      	it	eq
 80011ae:	694b      	ldreq	r3, [r1, #20]
 80011b0:	600f      	str	r7, [r1, #0]
 80011b2:	bf18      	it	ne
 80011b4:	2300      	movne	r3, #0
 80011b6:	eba6 0807 	sub.w	r8, r6, r7
 80011ba:	608b      	str	r3, [r1, #8]
 80011bc:	f1b8 0f00 	cmp.w	r8, #0
 80011c0:	dde9      	ble.n	8001196 <__sflush_r+0xae>
 80011c2:	6a21      	ldr	r1, [r4, #32]
 80011c4:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 80011c6:	4643      	mov	r3, r8
 80011c8:	463a      	mov	r2, r7
 80011ca:	4628      	mov	r0, r5
 80011cc:	47b0      	blx	r6
 80011ce:	2800      	cmp	r0, #0
 80011d0:	dc08      	bgt.n	80011e4 <__sflush_r+0xfc>
 80011d2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80011d6:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80011da:	81a3      	strh	r3, [r4, #12]
 80011dc:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 80011e0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80011e4:	4407      	add	r7, r0
 80011e6:	eba8 0800 	sub.w	r8, r8, r0
 80011ea:	e7e7      	b.n	80011bc <__sflush_r+0xd4>
 80011ec:	dfbffffe 	.word	0xdfbffffe

080011f0 <_fflush_r>:
 80011f0:	b538      	push	{r3, r4, r5, lr}
 80011f2:	690b      	ldr	r3, [r1, #16]
 80011f4:	4605      	mov	r5, r0
 80011f6:	460c      	mov	r4, r1
 80011f8:	b913      	cbnz	r3, 8001200 <_fflush_r+0x10>
 80011fa:	2500      	movs	r5, #0
 80011fc:	4628      	mov	r0, r5
 80011fe:	bd38      	pop	{r3, r4, r5, pc}
 8001200:	b118      	cbz	r0, 800120a <_fflush_r+0x1a>
 8001202:	6a03      	ldr	r3, [r0, #32]
 8001204:	b90b      	cbnz	r3, 800120a <_fflush_r+0x1a>
 8001206:	f7ff fcd9 	bl	8000bbc <__sinit>
 800120a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800120e:	2b00      	cmp	r3, #0
 8001210:	d0f3      	beq.n	80011fa <_fflush_r+0xa>
 8001212:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 8001214:	07d0      	lsls	r0, r2, #31
 8001216:	d404      	bmi.n	8001222 <_fflush_r+0x32>
 8001218:	0599      	lsls	r1, r3, #22
 800121a:	d402      	bmi.n	8001222 <_fflush_r+0x32>
 800121c:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800121e:	f7ff fe68 	bl	8000ef2 <__retarget_lock_acquire_recursive>
 8001222:	4628      	mov	r0, r5
 8001224:	4621      	mov	r1, r4
 8001226:	f7ff ff5f 	bl	80010e8 <__sflush_r>
 800122a:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 800122c:	07da      	lsls	r2, r3, #31
 800122e:	4605      	mov	r5, r0
 8001230:	d4e4      	bmi.n	80011fc <_fflush_r+0xc>
 8001232:	89a3      	ldrh	r3, [r4, #12]
 8001234:	059b      	lsls	r3, r3, #22
 8001236:	d4e1      	bmi.n	80011fc <_fflush_r+0xc>
 8001238:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800123a:	f7ff fe5b 	bl	8000ef4 <__retarget_lock_release_recursive>
 800123e:	e7dd      	b.n	80011fc <_fflush_r+0xc>

08001240 <__swhatbuf_r>:
 8001240:	b570      	push	{r4, r5, r6, lr}
 8001242:	460c      	mov	r4, r1
 8001244:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001248:	2900      	cmp	r1, #0
 800124a:	b096      	sub	sp, #88	@ 0x58
 800124c:	4615      	mov	r5, r2
 800124e:	461e      	mov	r6, r3
 8001250:	da0d      	bge.n	800126e <__swhatbuf_r+0x2e>
 8001252:	89a3      	ldrh	r3, [r4, #12]
 8001254:	f013 0f80 	tst.w	r3, #128	@ 0x80
 8001258:	f04f 0100 	mov.w	r1, #0
 800125c:	bf14      	ite	ne
 800125e:	2340      	movne	r3, #64	@ 0x40
 8001260:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 8001264:	2000      	movs	r0, #0
 8001266:	6031      	str	r1, [r6, #0]
 8001268:	602b      	str	r3, [r5, #0]
 800126a:	b016      	add	sp, #88	@ 0x58
 800126c:	bd70      	pop	{r4, r5, r6, pc}
 800126e:	466a      	mov	r2, sp
 8001270:	f000 f87c 	bl	800136c <_fstat_r>
 8001274:	2800      	cmp	r0, #0
 8001276:	dbec      	blt.n	8001252 <__swhatbuf_r+0x12>
 8001278:	9901      	ldr	r1, [sp, #4]
 800127a:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 800127e:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 8001282:	4259      	negs	r1, r3
 8001284:	4159      	adcs	r1, r3
 8001286:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 800128a:	e7eb      	b.n	8001264 <__swhatbuf_r+0x24>

0800128c <__smakebuf_r>:
 800128c:	898b      	ldrh	r3, [r1, #12]
 800128e:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8001290:	079d      	lsls	r5, r3, #30
 8001292:	4606      	mov	r6, r0
 8001294:	460c      	mov	r4, r1
 8001296:	d507      	bpl.n	80012a8 <__smakebuf_r+0x1c>
 8001298:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 800129c:	6023      	str	r3, [r4, #0]
 800129e:	6123      	str	r3, [r4, #16]
 80012a0:	2301      	movs	r3, #1
 80012a2:	6163      	str	r3, [r4, #20]
 80012a4:	b003      	add	sp, #12
 80012a6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80012a8:	ab01      	add	r3, sp, #4
 80012aa:	466a      	mov	r2, sp
 80012ac:	f7ff ffc8 	bl	8001240 <__swhatbuf_r>
 80012b0:	9f00      	ldr	r7, [sp, #0]
 80012b2:	4605      	mov	r5, r0
 80012b4:	4639      	mov	r1, r7
 80012b6:	4630      	mov	r0, r6
 80012b8:	f7ff fe8a 	bl	8000fd0 <_malloc_r>
 80012bc:	b948      	cbnz	r0, 80012d2 <__smakebuf_r+0x46>
 80012be:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80012c2:	059a      	lsls	r2, r3, #22
 80012c4:	d4ee      	bmi.n	80012a4 <__smakebuf_r+0x18>
 80012c6:	f023 0303 	bic.w	r3, r3, #3
 80012ca:	f043 0302 	orr.w	r3, r3, #2
 80012ce:	81a3      	strh	r3, [r4, #12]
 80012d0:	e7e2      	b.n	8001298 <__smakebuf_r+0xc>
 80012d2:	89a3      	ldrh	r3, [r4, #12]
 80012d4:	6020      	str	r0, [r4, #0]
 80012d6:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80012da:	81a3      	strh	r3, [r4, #12]
 80012dc:	9b01      	ldr	r3, [sp, #4]
 80012de:	e9c4 0704 	strd	r0, r7, [r4, #16]
 80012e2:	b15b      	cbz	r3, 80012fc <__smakebuf_r+0x70>
 80012e4:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80012e8:	4630      	mov	r0, r6
 80012ea:	f000 f851 	bl	8001390 <_isatty_r>
 80012ee:	b128      	cbz	r0, 80012fc <__smakebuf_r+0x70>
 80012f0:	89a3      	ldrh	r3, [r4, #12]
 80012f2:	f023 0303 	bic.w	r3, r3, #3
 80012f6:	f043 0301 	orr.w	r3, r3, #1
 80012fa:	81a3      	strh	r3, [r4, #12]
 80012fc:	89a3      	ldrh	r3, [r4, #12]
 80012fe:	431d      	orrs	r5, r3
 8001300:	81a5      	strh	r5, [r4, #12]
 8001302:	e7cf      	b.n	80012a4 <__smakebuf_r+0x18>

08001304 <_putc_r>:
 8001304:	b570      	push	{r4, r5, r6, lr}
 8001306:	460d      	mov	r5, r1
 8001308:	4614      	mov	r4, r2
 800130a:	4606      	mov	r6, r0
 800130c:	b118      	cbz	r0, 8001316 <_putc_r+0x12>
 800130e:	6a03      	ldr	r3, [r0, #32]
 8001310:	b90b      	cbnz	r3, 8001316 <_putc_r+0x12>
 8001312:	f7ff fc53 	bl	8000bbc <__sinit>
 8001316:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8001318:	07d8      	lsls	r0, r3, #31
 800131a:	d405      	bmi.n	8001328 <_putc_r+0x24>
 800131c:	89a3      	ldrh	r3, [r4, #12]
 800131e:	0599      	lsls	r1, r3, #22
 8001320:	d402      	bmi.n	8001328 <_putc_r+0x24>
 8001322:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8001324:	f7ff fde5 	bl	8000ef2 <__retarget_lock_acquire_recursive>
 8001328:	68a3      	ldr	r3, [r4, #8]
 800132a:	3b01      	subs	r3, #1
 800132c:	2b00      	cmp	r3, #0
 800132e:	60a3      	str	r3, [r4, #8]
 8001330:	da05      	bge.n	800133e <_putc_r+0x3a>
 8001332:	69a2      	ldr	r2, [r4, #24]
 8001334:	4293      	cmp	r3, r2
 8001336:	db12      	blt.n	800135e <_putc_r+0x5a>
 8001338:	b2eb      	uxtb	r3, r5
 800133a:	2b0a      	cmp	r3, #10
 800133c:	d00f      	beq.n	800135e <_putc_r+0x5a>
 800133e:	6823      	ldr	r3, [r4, #0]
 8001340:	1c5a      	adds	r2, r3, #1
 8001342:	6022      	str	r2, [r4, #0]
 8001344:	701d      	strb	r5, [r3, #0]
 8001346:	b2ed      	uxtb	r5, r5
 8001348:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 800134a:	07da      	lsls	r2, r3, #31
 800134c:	d405      	bmi.n	800135a <_putc_r+0x56>
 800134e:	89a3      	ldrh	r3, [r4, #12]
 8001350:	059b      	lsls	r3, r3, #22
 8001352:	d402      	bmi.n	800135a <_putc_r+0x56>
 8001354:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8001356:	f7ff fdcd 	bl	8000ef4 <__retarget_lock_release_recursive>
 800135a:	4628      	mov	r0, r5
 800135c:	bd70      	pop	{r4, r5, r6, pc}
 800135e:	4629      	mov	r1, r5
 8001360:	4622      	mov	r2, r4
 8001362:	4630      	mov	r0, r6
 8001364:	f7ff fcbd 	bl	8000ce2 <__swbuf_r>
 8001368:	4605      	mov	r5, r0
 800136a:	e7ed      	b.n	8001348 <_putc_r+0x44>

0800136c <_fstat_r>:
 800136c:	b538      	push	{r3, r4, r5, lr}
 800136e:	4d07      	ldr	r5, [pc, #28]	@ (800138c <_fstat_r+0x20>)
 8001370:	2300      	movs	r3, #0
 8001372:	4604      	mov	r4, r0
 8001374:	4608      	mov	r0, r1
 8001376:	4611      	mov	r1, r2
 8001378:	602b      	str	r3, [r5, #0]
 800137a:	f000 f831 	bl	80013e0 <_fstat>
 800137e:	1c43      	adds	r3, r0, #1
 8001380:	d102      	bne.n	8001388 <_fstat_r+0x1c>
 8001382:	682b      	ldr	r3, [r5, #0]
 8001384:	b103      	cbz	r3, 8001388 <_fstat_r+0x1c>
 8001386:	6023      	str	r3, [r4, #0]
 8001388:	bd38      	pop	{r3, r4, r5, pc}
 800138a:	bf00      	nop
 800138c:	200001b8 	.word	0x200001b8

08001390 <_isatty_r>:
 8001390:	b538      	push	{r3, r4, r5, lr}
 8001392:	4d06      	ldr	r5, [pc, #24]	@ (80013ac <_isatty_r+0x1c>)
 8001394:	2300      	movs	r3, #0
 8001396:	4604      	mov	r4, r0
 8001398:	4608      	mov	r0, r1
 800139a:	602b      	str	r3, [r5, #0]
 800139c:	f000 f828 	bl	80013f0 <_isatty>
 80013a0:	1c43      	adds	r3, r0, #1
 80013a2:	d102      	bne.n	80013aa <_isatty_r+0x1a>
 80013a4:	682b      	ldr	r3, [r5, #0]
 80013a6:	b103      	cbz	r3, 80013aa <_isatty_r+0x1a>
 80013a8:	6023      	str	r3, [r4, #0]
 80013aa:	bd38      	pop	{r3, r4, r5, pc}
 80013ac:	200001b8 	.word	0x200001b8

080013b0 <_sbrk_r>:
 80013b0:	b538      	push	{r3, r4, r5, lr}
 80013b2:	4d06      	ldr	r5, [pc, #24]	@ (80013cc <_sbrk_r+0x1c>)
 80013b4:	2300      	movs	r3, #0
 80013b6:	4604      	mov	r4, r0
 80013b8:	4608      	mov	r0, r1
 80013ba:	602b      	str	r3, [r5, #0]
 80013bc:	f000 f830 	bl	8001420 <_sbrk>
 80013c0:	1c43      	adds	r3, r0, #1
 80013c2:	d102      	bne.n	80013ca <_sbrk_r+0x1a>
 80013c4:	682b      	ldr	r3, [r5, #0]
 80013c6:	b103      	cbz	r3, 80013ca <_sbrk_r+0x1a>
 80013c8:	6023      	str	r3, [r4, #0]
 80013ca:	bd38      	pop	{r3, r4, r5, pc}
 80013cc:	200001b8 	.word	0x200001b8

080013d0 <_close>:
 80013d0:	4b02      	ldr	r3, [pc, #8]	@ (80013dc <_close+0xc>)
 80013d2:	2258      	movs	r2, #88	@ 0x58
 80013d4:	601a      	str	r2, [r3, #0]
 80013d6:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 80013da:	4770      	bx	lr
 80013dc:	200001b8 	.word	0x200001b8

080013e0 <_fstat>:
 80013e0:	4b02      	ldr	r3, [pc, #8]	@ (80013ec <_fstat+0xc>)
 80013e2:	2258      	movs	r2, #88	@ 0x58
 80013e4:	601a      	str	r2, [r3, #0]
 80013e6:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 80013ea:	4770      	bx	lr
 80013ec:	200001b8 	.word	0x200001b8

080013f0 <_isatty>:
 80013f0:	4b02      	ldr	r3, [pc, #8]	@ (80013fc <_isatty+0xc>)
 80013f2:	2258      	movs	r2, #88	@ 0x58
 80013f4:	601a      	str	r2, [r3, #0]
 80013f6:	2000      	movs	r0, #0
 80013f8:	4770      	bx	lr
 80013fa:	bf00      	nop
 80013fc:	200001b8 	.word	0x200001b8

08001400 <_lseek>:
 8001400:	4b02      	ldr	r3, [pc, #8]	@ (800140c <_lseek+0xc>)
 8001402:	2258      	movs	r2, #88	@ 0x58
 8001404:	601a      	str	r2, [r3, #0]
 8001406:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 800140a:	4770      	bx	lr
 800140c:	200001b8 	.word	0x200001b8

08001410 <_read>:
 8001410:	4b02      	ldr	r3, [pc, #8]	@ (800141c <_read+0xc>)
 8001412:	2258      	movs	r2, #88	@ 0x58
 8001414:	601a      	str	r2, [r3, #0]
 8001416:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 800141a:	4770      	bx	lr
 800141c:	200001b8 	.word	0x200001b8

08001420 <_sbrk>:
 8001420:	4a04      	ldr	r2, [pc, #16]	@ (8001434 <_sbrk+0x14>)
 8001422:	6811      	ldr	r1, [r2, #0]
 8001424:	4603      	mov	r3, r0
 8001426:	b909      	cbnz	r1, 800142c <_sbrk+0xc>
 8001428:	4903      	ldr	r1, [pc, #12]	@ (8001438 <_sbrk+0x18>)
 800142a:	6011      	str	r1, [r2, #0]
 800142c:	6810      	ldr	r0, [r2, #0]
 800142e:	4403      	add	r3, r0
 8001430:	6013      	str	r3, [r2, #0]
 8001432:	4770      	bx	lr
 8001434:	200001c8 	.word	0x200001c8
 8001438:	200001d0 	.word	0x200001d0

0800143c <_init>:
 800143c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800143e:	bf00      	nop
 8001440:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001442:	bc08      	pop	{r3}
 8001444:	469e      	mov	lr, r3
 8001446:	4770      	bx	lr

08001448 <_fini>:
 8001448:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800144a:	bf00      	nop
 800144c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800144e:	bc08      	pop	{r3}
 8001450:	469e      	mov	lr, r3
 8001452:	4770      	bx	lr
